import { type AfterContentInit, type OnDestroy, type QueryList } from '@angular/core';
import { BrnAccordionTriggerDirective } from './brn-accordion-trigger.directive';
import * as i0 from "@angular/core";
export declare class BrnAccordionDirective implements AfterContentInit, OnDestroy {
    private readonly _el;
    private _keyManager?;
    private _focusMonitor;
    private _ngZone;
    private readonly _focused;
    private readonly _openItemIds;
    readonly openItemIds: import("@angular/core").Signal<number[]>;
    readonly state: import("@angular/core").Signal<"open" | "closed">;
    triggers?: QueryList<BrnAccordionTriggerDirective>;
    type: 'single' | 'multiple';
    dir: 'ltr' | 'rtl' | null;
    orientation: 'horizontal' | 'vertical';
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    setActiveItem(item: BrnAccordionTriggerDirective): void;
    toggleItem(id: number): void;
    openItem(id: number): void;
    closeItem(id: number): void;
    private preventDefaultEvents;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnAccordionDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnAccordionDirective, "[brnAccordion]", never, { "type": { "alias": "type"; "required": false; }; "dir": { "alias": "dir"; "required": false; }; "orientation": { "alias": "orientation"; "required": false; }; }, {}, ["triggers"], never, true, never>;
}
