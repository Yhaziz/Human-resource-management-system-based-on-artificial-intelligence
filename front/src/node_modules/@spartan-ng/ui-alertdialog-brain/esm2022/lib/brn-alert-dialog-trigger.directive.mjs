import { Directive, Input } from '@angular/core';
import { BrnDialogTriggerDirective } from '@spartan-ng/ui-dialog-brain';
import * as i0 from "@angular/core";
export class BrnAlertDialogTriggerDirective extends BrnDialogTriggerDirective {
    set brnAlertDialogTriggerFor(brnDialog) {
        super.brnDialogTriggerFor = brnDialog;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogTriggerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogTriggerDirective, isStandalone: true, selector: "button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]", inputs: { brnAlertDialogTriggerFor: "brnAlertDialogTriggerFor" }, host: { attributes: { "aria-haspopup": "dialog" }, properties: { "id": "id()", "attr.aria-expanded": "state() === 'open' ? 'true': 'false'", "attr.data-state": "state()", "attr.aria-controls": "dialogId" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]',
                    standalone: true,
                    host: {
                        '[id]': 'id()',
                        'aria-haspopup': 'dialog',
                        '[attr.aria-expanded]': "state() === 'open' ? 'true': 'false'",
                        '[attr.data-state]': 'state()',
                        '[attr.aria-controls]': 'dialogId',
                    },
                }]
        }], propDecorators: { brnAlertDialogTriggerFor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLWFsZXJ0LWRpYWxvZy10cmlnZ2VyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWkvYWxlcnQtZGlhbG9nL2JyYWluL3NyYy9saWIvYnJuLWFsZXJ0LWRpYWxvZy10cmlnZ2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFjeEUsTUFBTSxPQUFPLDhCQUErQixTQUFRLHlCQUF5QjtJQUM1RSxJQUNJLHdCQUF3QixDQUFDLFNBQWtDO1FBQzlELEtBQUssQ0FBQyxtQkFBbUIsR0FBRyxTQUFTLENBQUM7SUFDdkMsQ0FBQzs4R0FKVyw4QkFBOEI7a0dBQTlCLDhCQUE4Qjs7MkZBQTlCLDhCQUE4QjtrQkFYMUMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsZ0VBQWdFO29CQUMxRSxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNMLE1BQU0sRUFBRSxNQUFNO3dCQUNkLGVBQWUsRUFBRSxRQUFRO3dCQUN6QixzQkFBc0IsRUFBRSxzQ0FBc0M7d0JBQzlELG1CQUFtQixFQUFFLFNBQVM7d0JBQzlCLHNCQUFzQixFQUFFLFVBQVU7cUJBQ2xDO2lCQUNEOzhCQUdJLHdCQUF3QjtzQkFEM0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJybkRpYWxvZ1RyaWdnZXJEaXJlY3RpdmUgfSBmcm9tICdAc3BhcnRhbi1uZy91aS1kaWFsb2ctYnJhaW4nO1xuaW1wb3J0IHR5cGUgeyBCcm5BbGVydERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJy4vYnJuLWFsZXJ0LWRpYWxvZy5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6ICdidXR0b25bYnJuQWxlcnREaWFsb2dUcmlnZ2VyXSxidXR0b25bYnJuQWxlcnREaWFsb2dUcmlnZ2VyRm9yXScsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGhvc3Q6IHtcblx0XHQnW2lkXSc6ICdpZCgpJyxcblx0XHQnYXJpYS1oYXNwb3B1cCc6ICdkaWFsb2cnLFxuXHRcdCdbYXR0ci5hcmlhLWV4cGFuZGVkXSc6IFwic3RhdGUoKSA9PT0gJ29wZW4nID8gJ3RydWUnOiAnZmFsc2UnXCIsXG5cdFx0J1thdHRyLmRhdGEtc3RhdGVdJzogJ3N0YXRlKCknLFxuXHRcdCdbYXR0ci5hcmlhLWNvbnRyb2xzXSc6ICdkaWFsb2dJZCcsXG5cdH0sXG59KVxuZXhwb3J0IGNsYXNzIEJybkFsZXJ0RGlhbG9nVHJpZ2dlckRpcmVjdGl2ZSBleHRlbmRzIEJybkRpYWxvZ1RyaWdnZXJEaXJlY3RpdmUge1xuXHRASW5wdXQoKVxuXHRzZXQgYnJuQWxlcnREaWFsb2dUcmlnZ2VyRm9yKGJybkRpYWxvZzogQnJuQWxlcnREaWFsb2dDb21wb25lbnQpIHtcblx0XHRzdXBlci5icm5EaWFsb2dUcmlnZ2VyRm9yID0gYnJuRGlhbG9nO1xuXHR9XG59XG4iXX0=