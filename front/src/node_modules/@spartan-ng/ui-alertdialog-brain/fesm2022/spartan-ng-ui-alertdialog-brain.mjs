import * as i0 from '@angular/core';
import { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, forwardRef, NgModule } from '@angular/core';
import { provideExposesStateProviderExisting, provideCustomClassSettableExisting } from '@spartan-ng/ui-core';
import { BrnDialogContentDirective, BrnDialogDescriptionDirective, BrnDialogOverlayComponent, BrnDialogTitleDirective, BrnDialogTriggerDirective, BrnDialogComponent } from '@spartan-ng/ui-dialog-brain';

class BrnAlertDialogContentDirective extends BrnDialogContentDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogContentDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogContentDirective, isStandalone: true, selector: "[brnAlertDialogContent]", providers: [provideExposesStateProviderExisting(() => BrnAlertDialogContentDirective)], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnAlertDialogContent]',
                    standalone: true,
                    providers: [provideExposesStateProviderExisting(() => BrnAlertDialogContentDirective)],
                }]
        }] });

class BrnAlertDialogDescriptionDirective extends BrnDialogDescriptionDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogDescriptionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogDescriptionDirective, isStandalone: true, selector: "[brnAlertDialogDescription]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogDescriptionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnAlertDialogDescription]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnAlertDialogOverlayComponent extends BrnDialogOverlayComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogOverlayComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogOverlayComponent, isStandalone: true, selector: "brn-alert-dialog-overlay", providers: [provideCustomClassSettableExisting(() => BrnAlertDialogOverlayComponent)], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogOverlayComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-alert-dialog-overlay',
                    standalone: true,
                    providers: [provideCustomClassSettableExisting(() => BrnAlertDialogOverlayComponent)],
                    template: ``,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }] });

class BrnAlertDialogTitleDirective extends BrnDialogTitleDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogTitleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogTitleDirective, isStandalone: true, selector: "[brnAlertDialogTitle]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogTitleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnAlertDialogTitle]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnAlertDialogTriggerDirective extends BrnDialogTriggerDirective {
    set brnAlertDialogTriggerFor(brnDialog) {
        super.brnDialogTriggerFor = brnDialog;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogTriggerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogTriggerDirective, isStandalone: true, selector: "button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]", inputs: { brnAlertDialogTriggerFor: "brnAlertDialogTriggerFor" }, host: { attributes: { "aria-haspopup": "dialog" }, properties: { "id": "id()", "attr.aria-expanded": "state() === 'open' ? 'true': 'false'", "attr.data-state": "state()", "attr.aria-controls": "dialogId" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]',
                    standalone: true,
                    host: {
                        '[id]': 'id()',
                        'aria-haspopup': 'dialog',
                        '[attr.aria-expanded]': "state() === 'open' ? 'true': 'false'",
                        '[attr.data-state]': 'state()',
                        '[attr.aria-controls]': 'dialogId',
                    },
                }]
        }], propDecorators: { brnAlertDialogTriggerFor: [{
                type: Input
            }] } });

class BrnAlertDialogComponent extends BrnDialogComponent {
    constructor() {
        super();
        this._options.role = 'alertdialog';
        this._options.closeOnBackdropClick = false;
        this._options.closeOnOutsidePointerEvents = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnAlertDialogComponent, isStandalone: true, selector: "brn-alert-dialog", providers: [
            {
                provide: BrnDialogComponent,
                useExisting: forwardRef(() => BrnAlertDialogComponent),
            },
        ], exportAs: ["brnAlertDialog"], usesInheritance: true, ngImport: i0, template: `
		<ng-content />
	`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-alert-dialog',
                    standalone: true,
                    template: `
		<ng-content />
	`,
                    providers: [
                        {
                            provide: BrnDialogComponent,
                            useExisting: forwardRef(() => BrnAlertDialogComponent),
                        },
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    exportAs: 'brnAlertDialog',
                }]
        }], ctorParameters: () => [] });

const BrnAlertDialogImports = [
    BrnAlertDialogComponent,
    BrnAlertDialogOverlayComponent,
    BrnAlertDialogTriggerDirective,
    BrnAlertDialogContentDirective,
    BrnAlertDialogTitleDirective,
    BrnAlertDialogDescriptionDirective,
];
class BrnAlertDialogModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogModule, imports: [BrnAlertDialogComponent,
            BrnAlertDialogOverlayComponent,
            BrnAlertDialogTriggerDirective,
            BrnAlertDialogContentDirective,
            BrnAlertDialogTitleDirective,
            BrnAlertDialogDescriptionDirective], exports: [BrnAlertDialogComponent,
            BrnAlertDialogOverlayComponent,
            BrnAlertDialogTriggerDirective,
            BrnAlertDialogContentDirective,
            BrnAlertDialogTitleDirective,
            BrnAlertDialogDescriptionDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnAlertDialogModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...BrnAlertDialogImports],
                    exports: [...BrnAlertDialogImports],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { BrnAlertDialogComponent, BrnAlertDialogContentDirective, BrnAlertDialogDescriptionDirective, BrnAlertDialogImports, BrnAlertDialogModule, BrnAlertDialogOverlayComponent, BrnAlertDialogTitleDirective, BrnAlertDialogTriggerDirective };
//# sourceMappingURL=spartan-ng-ui-alertdialog-brain.mjs.map
