import { NgModule } from '@angular/core';
import { CmdkModule } from '@ngxpert/cmdk';
import { BrnCommandEmptyDirective } from './lib/brn-command-empty.directive';
import { BrnCommandGroupComponent } from './lib/brn-command-group.component';
import { BrnCommandInputDirective } from './lib/brn-command-input.directive';
import { BrnCommandItemDirective } from './lib/brn-command-item.directive';
import { BrnCommandListComponent } from './lib/brn-command-list.component';
import { BrnCommandLoaderDirective } from './lib/brn-command-loader.directive';
import { BrnCommandSeparatorComponent } from './lib/brn-command-separator.component';
import { BrnCommandComponent } from './lib/brn-command.component';
import * as i0 from "@angular/core";
export * from './lib/brn-command-empty.directive';
export * from './lib/brn-command-group.component';
export * from './lib/brn-command-input.directive';
export * from './lib/brn-command-item.directive';
export * from './lib/brn-command-list.component';
export * from './lib/brn-command-loader.directive';
export * from './lib/brn-command-separator.component';
export * from './lib/brn-command.component';
export const BrnCommandImports = [
    CmdkModule,
    BrnCommandComponent,
    BrnCommandEmptyDirective,
    BrnCommandGroupComponent,
    BrnCommandInputDirective,
    BrnCommandItemDirective,
    BrnCommandListComponent,
    BrnCommandLoaderDirective,
    BrnCommandSeparatorComponent,
    BrnCommandSeparatorComponent,
];
export class BrnCommandModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, imports: [CmdkModule,
            BrnCommandComponent,
            BrnCommandEmptyDirective,
            BrnCommandGroupComponent,
            BrnCommandInputDirective,
            BrnCommandItemDirective,
            BrnCommandListComponent,
            BrnCommandLoaderDirective,
            BrnCommandSeparatorComponent,
            BrnCommandSeparatorComponent], exports: [CmdkModule,
            BrnCommandComponent,
            BrnCommandEmptyDirective,
            BrnCommandGroupComponent,
            BrnCommandInputDirective,
            BrnCommandItemDirective,
            BrnCommandListComponent,
            BrnCommandLoaderDirective,
            BrnCommandSeparatorComponent,
            BrnCommandSeparatorComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, imports: [CmdkModule,
            BrnCommandGroupComponent,
            CmdkModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...BrnCommandImports],
                    exports: [...BrnCommandImports],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL2NvbW1hbmQvYnJhaW4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNyRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFFbEUsY0FBYyxtQ0FBbUMsQ0FBQztBQUNsRCxjQUFjLG1DQUFtQyxDQUFDO0FBQ2xELGNBQWMsbUNBQW1DLENBQUM7QUFDbEQsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLGtDQUFrQyxDQUFDO0FBQ2pELGNBQWMsb0NBQW9DLENBQUM7QUFDbkQsY0FBYyx1Q0FBdUMsQ0FBQztBQUN0RCxjQUFjLDZCQUE2QixDQUFDO0FBRTVDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHO0lBQ2hDLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsd0JBQXdCO0lBQ3hCLHdCQUF3QjtJQUN4Qix3QkFBd0I7SUFDeEIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2Qix5QkFBeUI7SUFDekIsNEJBQTRCO0lBQzVCLDRCQUE0QjtDQUNuQixDQUFDO0FBTVgsTUFBTSxPQUFPLGdCQUFnQjs4R0FBaEIsZ0JBQWdCOytHQUFoQixnQkFBZ0IsWUFoQjVCLFVBQVU7WUFDVixtQkFBbUI7WUFDbkIsd0JBQXdCO1lBQ3hCLHdCQUF3QjtZQUN4Qix3QkFBd0I7WUFDeEIsdUJBQXVCO1lBQ3ZCLHVCQUF1QjtZQUN2Qix5QkFBeUI7WUFDekIsNEJBQTRCO1lBQzVCLDRCQUE0QixhQVQ1QixVQUFVO1lBQ1YsbUJBQW1CO1lBQ25CLHdCQUF3QjtZQUN4Qix3QkFBd0I7WUFDeEIsd0JBQXdCO1lBQ3hCLHVCQUF1QjtZQUN2Qix1QkFBdUI7WUFDdkIseUJBQXlCO1lBQ3pCLDRCQUE0QjtZQUM1Qiw0QkFBNEI7K0dBT2hCLGdCQUFnQixZQWhCNUIsVUFBVTtZQUdWLHdCQUF3QjtZQUh4QixVQUFVOzsyRkFnQkUsZ0JBQWdCO2tCQUo1QixRQUFRO21CQUFDO29CQUNULE9BQU8sRUFBRSxDQUFDLEdBQUcsaUJBQWlCLENBQUM7b0JBQy9CLE9BQU8sRUFBRSxDQUFDLEdBQUcsaUJBQWlCLENBQUM7aUJBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ21ka01vZHVsZSB9IGZyb20gJ0BuZ3hwZXJ0L2NtZGsnO1xuaW1wb3J0IHsgQnJuQ29tbWFuZEVtcHR5RGlyZWN0aXZlIH0gZnJvbSAnLi9saWIvYnJuLWNvbW1hbmQtZW1wdHkuZGlyZWN0aXZlJztcbmltcG9ydCB7IEJybkNvbW1hbmRHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbGliL2Jybi1jb21tYW5kLWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCcm5Db21tYW5kSW5wdXREaXJlY3RpdmUgfSBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1pbnB1dC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQnJuQ29tbWFuZEl0ZW1EaXJlY3RpdmUgfSBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1pdGVtLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCcm5Db21tYW5kTGlzdENvbXBvbmVudCB9IGZyb20gJy4vbGliL2Jybi1jb21tYW5kLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IEJybkNvbW1hbmRMb2FkZXJEaXJlY3RpdmUgfSBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1sb2FkZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IEJybkNvbW1hbmRTZXBhcmF0b3JDb21wb25lbnQgfSBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1zZXBhcmF0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IEJybkNvbW1hbmRDb21wb25lbnQgfSBmcm9tICcuL2xpYi9icm4tY29tbWFuZC5jb21wb25lbnQnO1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1lbXB0eS5kaXJlY3RpdmUnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvYnJuLWNvbW1hbmQtZ3JvdXAuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2Jybi1jb21tYW5kLWlucHV0LmRpcmVjdGl2ZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1pdGVtLmRpcmVjdGl2ZSc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1saXN0LmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9icm4tY29tbWFuZC1sb2FkZXIuZGlyZWN0aXZlJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2Jybi1jb21tYW5kLXNlcGFyYXRvci5jb21wb25lbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvYnJuLWNvbW1hbmQuY29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IEJybkNvbW1hbmRJbXBvcnRzID0gW1xuXHRDbWRrTW9kdWxlLFxuXHRCcm5Db21tYW5kQ29tcG9uZW50LFxuXHRCcm5Db21tYW5kRW1wdHlEaXJlY3RpdmUsXG5cdEJybkNvbW1hbmRHcm91cENvbXBvbmVudCxcblx0QnJuQ29tbWFuZElucHV0RGlyZWN0aXZlLFxuXHRCcm5Db21tYW5kSXRlbURpcmVjdGl2ZSxcblx0QnJuQ29tbWFuZExpc3RDb21wb25lbnQsXG5cdEJybkNvbW1hbmRMb2FkZXJEaXJlY3RpdmUsXG5cdEJybkNvbW1hbmRTZXBhcmF0b3JDb21wb25lbnQsXG5cdEJybkNvbW1hbmRTZXBhcmF0b3JDb21wb25lbnQsXG5dIGFzIGNvbnN0O1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbLi4uQnJuQ29tbWFuZEltcG9ydHNdLFxuXHRleHBvcnRzOiBbLi4uQnJuQ29tbWFuZEltcG9ydHNdLFxufSlcbmV4cG9ydCBjbGFzcyBCcm5Db21tYW5kTW9kdWxlIHt9XG4iXX0=