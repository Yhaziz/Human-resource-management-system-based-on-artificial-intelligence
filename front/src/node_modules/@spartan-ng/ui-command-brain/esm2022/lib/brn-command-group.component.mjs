import { NgIf } from '@angular/common';
import { Component, forwardRef } from '@angular/core';
import { DynamicViewModule } from '@ngneat/overview';
import { GroupComponent } from '@ngxpert/cmdk';
import * as i0 from "@angular/core";
import * as i1 from "@ngneat/overview";
export class BrnCommandGroupComponent extends GroupComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandGroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandGroupComponent, isStandalone: true, selector: "brn-cmd-group", providers: [
            {
                provide: GroupComponent,
                useExisting: forwardRef(() => BrnCommandGroupComponent),
            },
        ], usesInheritance: true, ngImport: i0, template: `
		<div role="presentation" *ngIf="label" class="cmdk-group-label">
			<ng-container *dynamicView="label"></ng-container>
		</div>
		<div class="cmdk-group-content" role="group" [attr.aria-label]="ariaLabel">
			<ng-content></ng-content>
		</div>
	`, isInline: true, dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: DynamicViewModule }, { kind: "directive", type: i1.DynamicViewDirective, selector: "[dynamicView]", inputs: ["dynamicView", "dynamicViewInjector", "dynamicViewContext", "dynamicViewInputs"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-cmd-group',
                    standalone: true,
                    imports: [NgIf, DynamicViewModule],
                    providers: [
                        {
                            provide: GroupComponent,
                            useExisting: forwardRef(() => BrnCommandGroupComponent),
                        },
                    ],
                    template: `
		<div role="presentation" *ngIf="label" class="cmdk-group-label">
			<ng-container *dynamicView="label"></ng-container>
		</div>
		<div class="cmdk-group-content" role="group" [attr.aria-label]="ariaLabel">
			<ng-content></ng-content>
		</div>
	`,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLWNvbW1hbmQtZ3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS9jb21tYW5kL2JyYWluL3NyYy9saWIvYnJuLWNvbW1hbmQtZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFxQi9DLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxjQUFjOzhHQUEvQyx3QkFBd0I7a0dBQXhCLHdCQUF3Qiw0REFmekI7WUFDVjtnQkFDQyxPQUFPLEVBQUUsY0FBYztnQkFDdkIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQzthQUN2RDtTQUNELGlEQUNTOzs7Ozs7O0VBT1QsNERBZFMsSUFBSSw0RkFBRSxpQkFBaUI7OzJGQWdCckIsd0JBQXdCO2tCQW5CcEMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsZUFBZTtvQkFDekIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxpQkFBaUIsQ0FBQztvQkFDbEMsU0FBUyxFQUFFO3dCQUNWOzRCQUNDLE9BQU8sRUFBRSxjQUFjOzRCQUN2QixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSx5QkFBeUIsQ0FBQzt5QkFDdkQ7cUJBQ0Q7b0JBQ0QsUUFBUSxFQUFFOzs7Ozs7O0VBT1Q7aUJBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRHluYW1pY1ZpZXdNb2R1bGUgfSBmcm9tICdAbmduZWF0L292ZXJ2aWV3JztcbmltcG9ydCB7IEdyb3VwQ29tcG9uZW50IH0gZnJvbSAnQG5neHBlcnQvY21kayc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2Jybi1jbWQtZ3JvdXAnLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbTmdJZiwgRHluYW1pY1ZpZXdNb2R1bGVdLFxuXHRwcm92aWRlcnM6IFtcblx0XHR7XG5cdFx0XHRwcm92aWRlOiBHcm91cENvbXBvbmVudCxcblx0XHRcdHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEJybkNvbW1hbmRHcm91cENvbXBvbmVudCksXG5cdFx0fSxcblx0XSxcblx0dGVtcGxhdGU6IGBcblx0XHQ8ZGl2IHJvbGU9XCJwcmVzZW50YXRpb25cIiAqbmdJZj1cImxhYmVsXCIgY2xhc3M9XCJjbWRrLWdyb3VwLWxhYmVsXCI+XG5cdFx0XHQ8bmctY29udGFpbmVyICpkeW5hbWljVmlldz1cImxhYmVsXCI+PC9uZy1jb250YWluZXI+XG5cdFx0PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz1cImNtZGstZ3JvdXAtY29udGVudFwiIHJvbGU9XCJncm91cFwiIFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCI+XG5cdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0PC9kaXY+XG5cdGAsXG59KVxuZXhwb3J0IGNsYXNzIEJybkNvbW1hbmRHcm91cENvbXBvbmVudCBleHRlbmRzIEdyb3VwQ29tcG9uZW50IHt9XG4iXX0=