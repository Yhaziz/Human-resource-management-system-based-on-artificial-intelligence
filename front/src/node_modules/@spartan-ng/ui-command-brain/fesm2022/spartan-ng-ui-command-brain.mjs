import * as i0 from '@angular/core';
import { forwardRef, Directive, Component, NgModule } from '@angular/core';
import { EmptyDirective, GroupComponent, InputDirective, ItemDirective, ListComponent, LoaderDirective, SeparatorComponent, CommandComponent, CmdkService, CmdkModule } from '@ngxpert/cmdk';
import { NgIf } from '@angular/common';
import * as i1 from '@ngneat/overview';
import { DynamicViewModule } from '@ngneat/overview';
import { __decorate } from 'tslib';
import { UntilDestroy } from '@ngneat/until-destroy';

class BrnCommandEmptyDirective extends EmptyDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandEmptyDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandEmptyDirective, isStandalone: true, selector: "[brnCmdEmpty]", host: { classAttribute: "cmdk-empty" }, providers: [
            {
                provide: EmptyDirective,
                useExisting: forwardRef(() => BrnCommandEmptyDirective),
            },
        ], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandEmptyDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnCmdEmpty]',
                    standalone: true,
                    providers: [
                        {
                            provide: EmptyDirective,
                            useExisting: forwardRef(() => BrnCommandEmptyDirective),
                        },
                    ],
                    host: {
                        class: 'cmdk-empty',
                    },
                }]
        }] });

class BrnCommandGroupComponent extends GroupComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandGroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandGroupComponent, isStandalone: true, selector: "brn-cmd-group", providers: [
            {
                provide: GroupComponent,
                useExisting: forwardRef(() => BrnCommandGroupComponent),
            },
        ], usesInheritance: true, ngImport: i0, template: `
		<div role="presentation" *ngIf="label" class="cmdk-group-label">
			<ng-container *dynamicView="label"></ng-container>
		</div>
		<div class="cmdk-group-content" role="group" [attr.aria-label]="ariaLabel">
			<ng-content></ng-content>
		</div>
	`, isInline: true, dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: DynamicViewModule }, { kind: "directive", type: i1.DynamicViewDirective, selector: "[dynamicView]", inputs: ["dynamicView", "dynamicViewInjector", "dynamicViewContext", "dynamicViewInputs"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-cmd-group',
                    standalone: true,
                    imports: [NgIf, DynamicViewModule],
                    providers: [
                        {
                            provide: GroupComponent,
                            useExisting: forwardRef(() => BrnCommandGroupComponent),
                        },
                    ],
                    template: `
		<div role="presentation" *ngIf="label" class="cmdk-group-label">
			<ng-container *dynamicView="label"></ng-container>
		</div>
		<div class="cmdk-group-content" role="group" [attr.aria-label]="ariaLabel">
			<ng-content></ng-content>
		</div>
	`,
                }]
        }] });

class BrnCommandInputDirective extends InputDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandInputDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandInputDirective, isStandalone: true, selector: "input[brnCmdInput]", host: { classAttribute: "cmdk-input" }, providers: [
            {
                provide: InputDirective,
                useExisting: forwardRef(() => BrnCommandInputDirective),
            },
        ], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandInputDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[brnCmdInput]',
                    standalone: true,
                    providers: [
                        {
                            provide: InputDirective,
                            useExisting: forwardRef(() => BrnCommandInputDirective),
                        },
                    ],
                    host: {
                        class: 'cmdk-input',
                    },
                }]
        }] });

let BrnCommandItemDirective = class BrnCommandItemDirective extends ItemDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandItemDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandItemDirective, isStandalone: true, selector: "[brnCmdItem]", host: { attributes: { "tabindex": "-1" }, classAttribute: "cmdk-item" }, providers: [
            {
                provide: ItemDirective,
                useExisting: forwardRef(() => BrnCommandItemDirective),
            },
        ], usesInheritance: true, ngImport: i0 }); }
};
BrnCommandItemDirective = __decorate([
    UntilDestroy()
], BrnCommandItemDirective);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandItemDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnCmdItem]',
                    standalone: true,
                    providers: [
                        {
                            provide: ItemDirective,
                            useExisting: forwardRef(() => BrnCommandItemDirective),
                        },
                    ],
                    host: {
                        tabindex: '-1',
                        class: 'cmdk-item',
                    },
                }]
        }] });

class BrnCommandListComponent extends ListComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandListComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandListComponent, isStandalone: true, selector: "brn-cmd-list", providers: [
            {
                provide: ListComponent,
                useExisting: forwardRef(() => BrnCommandListComponent),
            },
        ], usesInheritance: true, ngImport: i0, template: `
		<div class="cmdk-list-content" role="listbox" [attr.aria-label]="ariaLabel" #height>
			<ng-content></ng-content>
		</div>
	`, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-cmd-list',
                    standalone: true,
                    providers: [
                        {
                            provide: ListComponent,
                            useExisting: forwardRef(() => BrnCommandListComponent),
                        },
                    ],
                    template: `
		<div class="cmdk-list-content" role="listbox" [attr.aria-label]="ariaLabel" #height>
			<ng-content></ng-content>
		</div>
	`,
                }]
        }] });

class BrnCommandLoaderDirective extends LoaderDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandLoaderDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandLoaderDirective, isStandalone: true, selector: "[brnCmdLoader]", host: { classAttribute: "cmdk-loader" }, providers: [
            {
                provide: LoaderDirective,
                useExisting: forwardRef(() => BrnCommandLoaderDirective),
            },
        ], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandLoaderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnCmdLoader]',
                    standalone: true,
                    providers: [
                        {
                            provide: LoaderDirective,
                            useExisting: forwardRef(() => BrnCommandLoaderDirective),
                        },
                    ],
                    host: {
                        class: 'cmdk-loader',
                    },
                }]
        }] });

class BrnCommandSeparatorComponent extends SeparatorComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandSeparatorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandSeparatorComponent, isStandalone: true, selector: "brn-cmd-separator", host: { classAttribute: "cmdk-separator" }, providers: [
            {
                provide: SeparatorComponent,
                useExisting: forwardRef(() => BrnCommandSeparatorComponent),
            },
        ], usesInheritance: true, ngImport: i0, template: '<hr>', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandSeparatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-cmd-separator',
                    standalone: true,
                    template: '<hr>',
                    providers: [
                        {
                            provide: SeparatorComponent,
                            useExisting: forwardRef(() => BrnCommandSeparatorComponent),
                        },
                    ],
                    host: {
                        class: 'cmdk-separator',
                    },
                }]
        }] });

class BrnCommandComponent extends CommandComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnCommandComponent, isStandalone: true, selector: "brn-cmd", providers: [CmdkService], usesInheritance: true, ngImport: i0, template: `
		<ng-content />
	`, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-cmd',
                    standalone: true,
                    providers: [CmdkService],
                    template: `
		<ng-content />
	`,
                }]
        }] });

const BrnCommandImports = [
    CmdkModule,
    BrnCommandComponent,
    BrnCommandEmptyDirective,
    BrnCommandGroupComponent,
    BrnCommandInputDirective,
    BrnCommandItemDirective,
    BrnCommandListComponent,
    BrnCommandLoaderDirective,
    BrnCommandSeparatorComponent,
    BrnCommandSeparatorComponent,
];
class BrnCommandModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, imports: [CmdkModule,
            BrnCommandComponent,
            BrnCommandEmptyDirective,
            BrnCommandGroupComponent,
            BrnCommandInputDirective,
            BrnCommandItemDirective,
            BrnCommandListComponent,
            BrnCommandLoaderDirective,
            BrnCommandSeparatorComponent,
            BrnCommandSeparatorComponent], exports: [CmdkModule,
            BrnCommandComponent,
            BrnCommandEmptyDirective,
            BrnCommandGroupComponent,
            BrnCommandInputDirective,
            BrnCommandItemDirective,
            BrnCommandListComponent,
            BrnCommandLoaderDirective,
            BrnCommandSeparatorComponent,
            BrnCommandSeparatorComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, imports: [CmdkModule,
            BrnCommandGroupComponent,
            CmdkModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnCommandModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...BrnCommandImports],
                    exports: [...BrnCommandImports],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { BrnCommandComponent, BrnCommandEmptyDirective, BrnCommandGroupComponent, BrnCommandImports, BrnCommandInputDirective, BrnCommandItemDirective, BrnCommandListComponent, BrnCommandLoaderDirective, BrnCommandModule, BrnCommandSeparatorComponent };
//# sourceMappingURL=spartan-ng-ui-command-brain.mjs.map
