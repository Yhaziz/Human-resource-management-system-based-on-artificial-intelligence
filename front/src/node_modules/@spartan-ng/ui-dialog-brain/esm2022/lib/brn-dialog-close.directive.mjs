import { coerceNumberProperty } from '@angular/cdk/coercion';
import { Directive, Input, inject } from '@angular/core';
import { BrnDialogRef } from './brn-dialog-ref';
import * as i0 from "@angular/core";
export class BrnDialogCloseDirective {
    constructor() {
        this._brnDialogRef = inject(BrnDialogRef);
    }
    set delay(value) {
        this._delay = coerceNumberProperty(value);
    }
    close() {
        this._brnDialogRef.close(undefined, this._delay);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnDialogCloseDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnDialogCloseDirective, isStandalone: true, selector: "button[brnDialogClose]", inputs: { delay: "delay" }, host: { listeners: { "click": "close()" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnDialogCloseDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnDialogClose]',
                    standalone: true,
                    host: {
                        '(click)': 'close()',
                    },
                }]
        }], propDecorators: { delay: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLWRpYWxvZy1jbG9zZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL2RpYWxvZy9icmFpbi9zcmMvbGliL2Jybi1kaWFsb2ctY2xvc2UuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBb0IsTUFBTSx1QkFBdUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQVNoRCxNQUFNLE9BQU8sdUJBQXVCO0lBUHBDO1FBUWtCLGtCQUFhLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0tBWXREO0lBUkEsSUFDSSxLQUFLLENBQUMsS0FBa0I7UUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRU0sS0FBSztRQUNYLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs4R0FaVyx1QkFBdUI7a0dBQXZCLHVCQUF1Qjs7MkZBQXZCLHVCQUF1QjtrQkFQbkMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNMLFNBQVMsRUFBRSxTQUFTO3FCQUNwQjtpQkFDRDs4QkFPSSxLQUFLO3NCQURSLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2VOdW1iZXJQcm9wZXJ0eSwgdHlwZSBOdW1iZXJJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJybkRpYWxvZ1JlZiB9IGZyb20gJy4vYnJuLWRpYWxvZy1yZWYnO1xuXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6ICdidXR0b25bYnJuRGlhbG9nQ2xvc2VdJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aG9zdDoge1xuXHRcdCcoY2xpY2spJzogJ2Nsb3NlKCknLFxuXHR9LFxufSlcbmV4cG9ydCBjbGFzcyBCcm5EaWFsb2dDbG9zZURpcmVjdGl2ZSB7XG5cdHByaXZhdGUgcmVhZG9ubHkgX2JybkRpYWxvZ1JlZiA9IGluamVjdChCcm5EaWFsb2dSZWYpO1xuXG5cdHByaXZhdGUgX2RlbGF5OiBudW1iZXIgfCB1bmRlZmluZWQ7XG5cblx0QElucHV0KClcblx0c2V0IGRlbGF5KHZhbHVlOiBOdW1iZXJJbnB1dCkge1xuXHRcdHRoaXMuX2RlbGF5ID0gY29lcmNlTnVtYmVyUHJvcGVydHkodmFsdWUpO1xuXHR9XG5cblx0cHVibGljIGNsb3NlKCkge1xuXHRcdHRoaXMuX2JybkRpYWxvZ1JlZi5jbG9zZSh1bmRlZmluZWQsIHRoaXMuX2RlbGF5KTtcblx0fVxufVxuIl19