import { Directive, TemplateRef, inject } from '@angular/core';
import { provideExposedSideProviderExisting, provideExposesStateProviderExisting, } from '@spartan-ng/ui-core';
import { BrnHoverCardContentService } from './brn-hover-card-content.service';
import * as i0 from "@angular/core";
export class BrnHoverCardContentDirective {
    constructor() {
        this._contentService = inject(BrnHoverCardContentService);
        this.state = this._contentService.state;
        this.side = this._contentService.side;
        this.template = inject(TemplateRef);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnHoverCardContentDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnHoverCardContentDirective, isStandalone: true, selector: "[brnHoverCardContent]", providers: [
            provideExposedSideProviderExisting(() => BrnHoverCardContentDirective),
            provideExposesStateProviderExisting(() => BrnHoverCardContentDirective),
        ], exportAs: ["brnHoverCardContent"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnHoverCardContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnHoverCardContent]',
                    standalone: true,
                    exportAs: 'brnHoverCardContent',
                    providers: [
                        provideExposedSideProviderExisting(() => BrnHoverCardContentDirective),
                        provideExposesStateProviderExisting(() => BrnHoverCardContentDirective),
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLWhvdmVyLWNhcmQtY29udGVudC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL2hvdmVyLWNhcmQvYnJhaW4vc3JjL2xpYi9icm4taG92ZXItY2FyZC1jb250ZW50LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUNOLGtDQUFrQyxFQUNsQyxtQ0FBbUMsR0FHbkMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7QUFXOUUsTUFBTSxPQUFPLDRCQUE0QjtJQVR6QztRQVVrQixvQkFBZSxHQUFHLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQ3RELFVBQUssR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQztRQUNuQyxTQUFJLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUM7UUFDakMsYUFBUSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUMvQzs4R0FMWSw0QkFBNEI7a0dBQTVCLDRCQUE0QixvRUFMN0I7WUFDVixrQ0FBa0MsQ0FBQyxHQUFHLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztZQUN0RSxtQ0FBbUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztTQUN2RTs7MkZBRVcsNEJBQTRCO2tCQVR4QyxTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFVBQVUsRUFBRSxJQUFJO29CQUNoQixRQUFRLEVBQUUscUJBQXFCO29CQUMvQixTQUFTLEVBQUU7d0JBQ1Ysa0NBQWtDLENBQUMsR0FBRyxFQUFFLDZCQUE2QixDQUFDO3dCQUN0RSxtQ0FBbUMsQ0FBQyxHQUFHLEVBQUUsNkJBQTZCLENBQUM7cUJBQ3ZFO2lCQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuXHRwcm92aWRlRXhwb3NlZFNpZGVQcm92aWRlckV4aXN0aW5nLFxuXHRwcm92aWRlRXhwb3Nlc1N0YXRlUHJvdmlkZXJFeGlzdGluZyxcblx0dHlwZSBFeHBvc2VzU2lkZSxcblx0dHlwZSBFeHBvc2VzU3RhdGUsXG59IGZyb20gJ0BzcGFydGFuLW5nL3VpLWNvcmUnO1xuaW1wb3J0IHsgQnJuSG92ZXJDYXJkQ29udGVudFNlcnZpY2UgfSBmcm9tICcuL2Jybi1ob3Zlci1jYXJkLWNvbnRlbnQuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1ticm5Ib3ZlckNhcmRDb250ZW50XScsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGV4cG9ydEFzOiAnYnJuSG92ZXJDYXJkQ29udGVudCcsXG5cdHByb3ZpZGVyczogW1xuXHRcdHByb3ZpZGVFeHBvc2VkU2lkZVByb3ZpZGVyRXhpc3RpbmcoKCkgPT4gQnJuSG92ZXJDYXJkQ29udGVudERpcmVjdGl2ZSksXG5cdFx0cHJvdmlkZUV4cG9zZXNTdGF0ZVByb3ZpZGVyRXhpc3RpbmcoKCkgPT4gQnJuSG92ZXJDYXJkQ29udGVudERpcmVjdGl2ZSksXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIEJybkhvdmVyQ2FyZENvbnRlbnREaXJlY3RpdmUgaW1wbGVtZW50cyBFeHBvc2VzU3RhdGUsIEV4cG9zZXNTaWRlIHtcblx0cHJpdmF0ZSByZWFkb25seSBfY29udGVudFNlcnZpY2UgPSBpbmplY3QoQnJuSG92ZXJDYXJkQ29udGVudFNlcnZpY2UpO1xuXHRwdWJsaWMgcmVhZG9ubHkgc3RhdGUgPSB0aGlzLl9jb250ZW50U2VydmljZS5zdGF0ZTtcblx0cHVibGljIHJlYWRvbmx5IHNpZGUgPSB0aGlzLl9jb250ZW50U2VydmljZS5zaWRlO1xuXHRwdWJsaWMgcmVhZG9ubHkgdGVtcGxhdGUgPSBpbmplY3QoVGVtcGxhdGVSZWYpO1xufVxuIl19