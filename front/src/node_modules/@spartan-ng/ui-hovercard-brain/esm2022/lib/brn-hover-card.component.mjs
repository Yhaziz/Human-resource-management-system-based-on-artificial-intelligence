import { Component, ContentChild } from '@angular/core';
import { BrnHoverCardContentDirective } from './brn-hover-card-content.directive';
import { BrnHoverCardContentService } from './brn-hover-card-content.service';
import { BrnHoverCardTriggerDirective } from './brn-hover-card-trigger.directive';
import * as i0 from "@angular/core";
export class BrnHoverCardComponent {
    ngAfterContentInit() {
        if (!this._trigger || !this._content)
            return;
        this._trigger.brnHoverCardTriggerFor = this._content;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnHoverCardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnHoverCardComponent, isStandalone: true, selector: "brn-hover-card", providers: [BrnHoverCardContentService], queries: [{ propertyName: "_trigger", first: true, predicate: BrnHoverCardTriggerDirective, descendants: true, static: true }, { propertyName: "_content", first: true, predicate: BrnHoverCardContentDirective, descendants: true, static: true }], ngImport: i0, template: `
		<ng-content />
	`, isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnHoverCardComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-hover-card',
                    standalone: true,
                    providers: [BrnHoverCardContentService],
                    template: `
		<ng-content />
	`,
                }]
        }], propDecorators: { _trigger: [{
                type: ContentChild,
                args: [BrnHoverCardTriggerDirective, { static: true }]
            }], _content: [{
                type: ContentChild,
                args: [BrnHoverCardContentDirective, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLWhvdmVyLWNhcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS9ob3Zlci1jYXJkL2JyYWluL3NyYy9saWIvYnJuLWhvdmVyLWNhcmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUF5QixNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNsRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFVbEYsTUFBTSxPQUFPLHFCQUFxQjtJQU0xQixrQkFBa0I7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUTtZQUFFLE9BQU87UUFDN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3RELENBQUM7OEdBVFcscUJBQXFCO2tHQUFyQixxQkFBcUIsNkRBTHRCLENBQUMsMEJBQTBCLENBQUMsZ0VBTXpCLDRCQUE0Qix5RkFFNUIsNEJBQTRCLDhEQVBoQzs7RUFFVDs7MkZBRVcscUJBQXFCO2tCQVJqQyxTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixTQUFTLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztvQkFDdkMsUUFBUSxFQUFFOztFQUVUO2lCQUNEOzhCQUdRLFFBQVE7c0JBRGYsWUFBWTt1QkFBQyw0QkFBNEIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBR3BELFFBQVE7c0JBRGYsWUFBWTt1QkFBQyw0QkFBNEIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgdHlwZSBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCcm5Ib3ZlckNhcmRDb250ZW50RGlyZWN0aXZlIH0gZnJvbSAnLi9icm4taG92ZXItY2FyZC1jb250ZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCcm5Ib3ZlckNhcmRDb250ZW50U2VydmljZSB9IGZyb20gJy4vYnJuLWhvdmVyLWNhcmQtY29udGVudC5zZXJ2aWNlJztcbmltcG9ydCB7IEJybkhvdmVyQ2FyZFRyaWdnZXJEaXJlY3RpdmUgfSBmcm9tICcuL2Jybi1ob3Zlci1jYXJkLXRyaWdnZXIuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnYnJuLWhvdmVyLWNhcmQnLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRwcm92aWRlcnM6IFtCcm5Ib3ZlckNhcmRDb250ZW50U2VydmljZV0sXG5cdHRlbXBsYXRlOiBgXG5cdFx0PG5nLWNvbnRlbnQgLz5cblx0YCxcbn0pXG5leHBvcnQgY2xhc3MgQnJuSG92ZXJDYXJkQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG5cdEBDb250ZW50Q2hpbGQoQnJuSG92ZXJDYXJkVHJpZ2dlckRpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcblx0cHJpdmF0ZSBfdHJpZ2dlcj86IEJybkhvdmVyQ2FyZFRyaWdnZXJEaXJlY3RpdmU7XG5cdEBDb250ZW50Q2hpbGQoQnJuSG92ZXJDYXJkQ29udGVudERpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcblx0cHJpdmF0ZSBfY29udGVudD86IEJybkhvdmVyQ2FyZENvbnRlbnREaXJlY3RpdmU7XG5cblx0cHVibGljIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcblx0XHRpZiAoIXRoaXMuX3RyaWdnZXIgfHwgIXRoaXMuX2NvbnRlbnQpIHJldHVybjtcblx0XHR0aGlzLl90cmlnZ2VyLmJybkhvdmVyQ2FyZFRyaWdnZXJGb3IgPSB0aGlzLl9jb250ZW50O1xuXHR9XG59XG4iXX0=