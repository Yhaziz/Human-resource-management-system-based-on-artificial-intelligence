import { brnZoneOptimized } from '@spartan-ng/ui-core';
import { distinctUntilChanged, filter, fromEvent, map, merge, takeUntil } from 'rxjs';
import { isElement } from './brn-hover-card-trigger.directive';
function movedOut({ currentTarget, relatedTarget }) {
    return !isElement(relatedTarget) || !isElement(currentTarget) || !currentTarget.contains(relatedTarget);
}
export const createHoverObservable = (nativeElement, zone, destroyed$) => {
    return merge(fromEvent(nativeElement, `mouseenter`).pipe(map(() => true)), fromEvent(nativeElement, `mouseleave`).pipe(map(() => false)), 
    // Hello, Safari
    fromEvent(nativeElement, `mouseout`).pipe(filter(movedOut), map(() => false)), 
    /**
     * NOTE: onmouseout events don't trigger when objects move under mouse in Safari
     * https://bugs.webkit.org/show_bug.cgi?id=4117
     */
    fromEvent(nativeElement, `transitionend`).pipe(map(() => nativeElement.matches(`:hover`)))).pipe(distinctUntilChanged(), brnZoneOptimized(zone), takeUntil(destroyed$));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlSG92ZXJPYnNlcnZhYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS9ob3Zlci1jYXJkL2JyYWluL3NyYy9saWIvY3JlYXRlSG92ZXJPYnNlcnZhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFpQyxNQUFNLE1BQU0sQ0FBQztBQUNySCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFL0QsU0FBUyxRQUFRLENBQUMsRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFjO0lBQzdELE9BQU8sQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3pHLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxDQUNwQyxhQUEwQixFQUMxQixJQUFZLEVBQ1osVUFBeUIsRUFDSCxFQUFFO0lBQ3hCLE9BQU8sS0FBSyxDQUNYLFNBQVMsQ0FBQyxhQUFhLEVBQUUsWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUM1RCxTQUFTLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0QsZ0JBQWdCO0lBQ2hCLFNBQVMsQ0FBYSxhQUFhLEVBQUUsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUNwRCxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQ2hCLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FDaEI7SUFDRDs7O09BR0c7SUFDSCxTQUFTLENBQUMsYUFBYSxFQUFFLGVBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQzFGLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLEVBQUUsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUUsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDL0UsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGJyblpvbmVPcHRpbWl6ZWQgfSBmcm9tICdAc3BhcnRhbi1uZy91aS1jb3JlJztcbmltcG9ydCB7IGRpc3RpbmN0VW50aWxDaGFuZ2VkLCBmaWx0ZXIsIGZyb21FdmVudCwgbWFwLCBtZXJnZSwgdGFrZVVudGlsLCB0eXBlIE9ic2VydmFibGUsIHR5cGUgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSAnLi9icm4taG92ZXItY2FyZC10cmlnZ2VyLmRpcmVjdGl2ZSc7XG5cbmZ1bmN0aW9uIG1vdmVkT3V0KHsgY3VycmVudFRhcmdldCwgcmVsYXRlZFRhcmdldCB9OiBNb3VzZUV2ZW50KTogYm9vbGVhbiB7XG5cdHJldHVybiAhaXNFbGVtZW50KHJlbGF0ZWRUYXJnZXQpIHx8ICFpc0VsZW1lbnQoY3VycmVudFRhcmdldCkgfHwgIWN1cnJlbnRUYXJnZXQuY29udGFpbnMocmVsYXRlZFRhcmdldCk7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVIb3Zlck9ic2VydmFibGUgPSAoXG5cdG5hdGl2ZUVsZW1lbnQ6IEhUTUxFbGVtZW50LFxuXHR6b25lOiBOZ1pvbmUsXG5cdGRlc3Ryb3llZCQ6IFN1YmplY3Q8dm9pZD4sXG4pOiBPYnNlcnZhYmxlPGJvb2xlYW4+ID0+IHtcblx0cmV0dXJuIG1lcmdlKFxuXHRcdGZyb21FdmVudChuYXRpdmVFbGVtZW50LCBgbW91c2VlbnRlcmApLnBpcGUobWFwKCgpID0+IHRydWUpKSxcblx0XHRmcm9tRXZlbnQobmF0aXZlRWxlbWVudCwgYG1vdXNlbGVhdmVgKS5waXBlKG1hcCgoKSA9PiBmYWxzZSkpLFxuXHRcdC8vIEhlbGxvLCBTYWZhcmlcblx0XHRmcm9tRXZlbnQ8TW91c2VFdmVudD4obmF0aXZlRWxlbWVudCwgYG1vdXNlb3V0YCkucGlwZShcblx0XHRcdGZpbHRlcihtb3ZlZE91dCksXG5cdFx0XHRtYXAoKCkgPT4gZmFsc2UpLFxuXHRcdCksXG5cdFx0LyoqXG5cdFx0ICogTk9URTogb25tb3VzZW91dCBldmVudHMgZG9uJ3QgdHJpZ2dlciB3aGVuIG9iamVjdHMgbW92ZSB1bmRlciBtb3VzZSBpbiBTYWZhcmlcblx0XHQgKiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDExN1xuXHRcdCAqL1xuXHRcdGZyb21FdmVudChuYXRpdmVFbGVtZW50LCBgdHJhbnNpdGlvbmVuZGApLnBpcGUobWFwKCgpID0+IG5hdGl2ZUVsZW1lbnQubWF0Y2hlcyhgOmhvdmVyYCkpKSxcblx0KS5waXBlKGRpc3RpbmN0VW50aWxDaGFuZ2VkKCksIGJyblpvbmVPcHRpbWl6ZWQoem9uZSksIHRha2VVbnRpbChkZXN0cm95ZWQkKSk7XG59O1xuIl19