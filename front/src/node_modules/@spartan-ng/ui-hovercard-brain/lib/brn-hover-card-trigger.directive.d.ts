import { type OnDestroy, type OnInit, type TemplateRef } from '@angular/core';
import { type Observable } from 'rxjs';
import type { BrnHoverCardContentDirective } from './brn-hover-card-content.directive';
import * as i0 from "@angular/core";
export declare function isElement(node?: Element | EventTarget | Node | null): node is Element;
export declare class BrnHoverCardTriggerDirective implements OnInit, OnDestroy {
    private readonly _destroy$;
    private readonly _vcr;
    private readonly _zone;
    private readonly _el;
    private readonly _contentService;
    private readonly _focusMonitor;
    readonly focused$: Observable<boolean>;
    readonly hovered$: Observable<boolean>;
    readonly showing$: Observable<boolean>;
    showDelay: number;
    hideDelay: number;
    animationDelay: number;
    sideOffset: number;
    align: 'top' | 'bottom';
    set brnHoverCardTriggerFor(value: TemplateRef<unknown> | BrnHoverCardContentDirective);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnHoverCardTriggerDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnHoverCardTriggerDirective, "[brnHoverCardTrigger]:not(ng-container),[brnHoverCardTriggerFor]:not(ng-container)", ["brnHoverCardTrigger"], { "showDelay": { "alias": "showDelay"; "required": false; }; "hideDelay": { "alias": "hideDelay"; "required": false; }; "animationDelay": { "alias": "animationDelay"; "required": false; }; "sideOffset": { "alias": "sideOffset"; "required": false; }; "align": { "alias": "align"; "required": false; }; "brnHoverCardTriggerFor": { "alias": "brnHoverCardTriggerFor"; "required": false; }; }, {}, never, never, true, never>;
}
