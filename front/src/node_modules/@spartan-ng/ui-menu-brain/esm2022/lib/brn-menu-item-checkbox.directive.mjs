import { CdkMenuItemCheckbox } from '@angular/cdk/menu';
import { Directive, Input, Output, booleanAttribute, inject, signal } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/menu";
export class BrnMenuItemCheckboxDirective {
    constructor() {
        this._cdkMenuItem = inject(CdkMenuItemCheckbox, { host: true });
        this._checked = signal(this._cdkMenuItem.checked);
        this._disabled = signal(this._cdkMenuItem.disabled);
        this.triggered = this._cdkMenuItem.triggered;
    }
    set checked(value) {
        this._cdkMenuItem.checked = value;
        this._checked.set(value);
    }
    get checked() {
        return this._checked();
    }
    set disabled(value) {
        this._cdkMenuItem.disabled = value;
        this._disabled.set(value);
    }
    get disabled() {
        return this._disabled();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnMenuItemCheckboxDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "16.1.0", version: "17.3.5", type: BrnMenuItemCheckboxDirective, isStandalone: true, selector: "[brnMenuItemCheckbox]", inputs: { checked: ["checked", "checked", booleanAttribute], disabled: ["disabled", "disabled", booleanAttribute] }, outputs: { triggered: "triggered" }, host: { properties: { "class.checked": "_checked()", "disabled": "_disabled()" } }, hostDirectives: [{ directive: i1.CdkMenuItemCheckbox }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnMenuItemCheckboxDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnMenuItemCheckbox]',
                    standalone: true,
                    hostDirectives: [CdkMenuItemCheckbox],
                    host: {
                        '[class.checked]': '_checked()',
                        '[disabled]': '_disabled()',
                    },
                }]
        }], propDecorators: { checked: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], disabled: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], triggered: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLW1lbnUtaXRlbS1jaGVja2JveC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL21lbnUvYnJhaW4vc3JjL2xpYi9icm4tbWVudS1pdGVtLWNoZWNrYm94LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBVzNGLE1BQU0sT0FBTyw0QkFBNEI7SUFUekM7UUFVa0IsaUJBQVksR0FBRyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUV6RCxhQUFRLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7UUFXN0MsY0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBV2xELGNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztLQUN4RDtJQXRCQSxJQUNJLE9BQU8sQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUdELElBQ0ksUUFBUSxDQUFDLEtBQWM7UUFDMUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ25DLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUN6QixDQUFDOzhHQXRCVyw0QkFBNEI7a0dBQTVCLDRCQUE0QixtR0FJcEIsZ0JBQWdCLHNDQVdoQixnQkFBZ0I7OzJGQWZ4Qiw0QkFBNEI7a0JBVHhDLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLGNBQWMsRUFBRSxDQUFDLG1CQUFtQixDQUFDO29CQUNyQyxJQUFJLEVBQUU7d0JBQ0wsaUJBQWlCLEVBQUUsWUFBWTt3QkFDL0IsWUFBWSxFQUFFLGFBQWE7cUJBQzNCO2lCQUNEOzhCQU1JLE9BQU87c0JBRFYsS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtnQkFZbEMsUUFBUTtzQkFEWCxLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQVV0QixTQUFTO3NCQUR4QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2RrTWVudUl0ZW1DaGVja2JveCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9tZW51JztcbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE91dHB1dCwgYm9vbGVhbkF0dHJpYnV0ZSwgaW5qZWN0LCBzaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2Jybk1lbnVJdGVtQ2hlY2tib3hdJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aG9zdERpcmVjdGl2ZXM6IFtDZGtNZW51SXRlbUNoZWNrYm94XSxcblx0aG9zdDoge1xuXHRcdCdbY2xhc3MuY2hlY2tlZF0nOiAnX2NoZWNrZWQoKScsXG5cdFx0J1tkaXNhYmxlZF0nOiAnX2Rpc2FibGVkKCknLFxuXHR9LFxufSlcbmV4cG9ydCBjbGFzcyBCcm5NZW51SXRlbUNoZWNrYm94RGlyZWN0aXZlIHtcblx0cHJpdmF0ZSByZWFkb25seSBfY2RrTWVudUl0ZW0gPSBpbmplY3QoQ2RrTWVudUl0ZW1DaGVja2JveCwgeyBob3N0OiB0cnVlIH0pO1xuXG5cdHByb3RlY3RlZCByZWFkb25seSBfY2hlY2tlZCA9IHNpZ25hbCh0aGlzLl9jZGtNZW51SXRlbS5jaGVja2VkKTtcblx0QElucHV0KHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pXG5cdHNldCBjaGVja2VkKHZhbHVlOiBib29sZWFuKSB7XG5cdFx0dGhpcy5fY2RrTWVudUl0ZW0uY2hlY2tlZCA9IHZhbHVlO1xuXHRcdHRoaXMuX2NoZWNrZWQuc2V0KHZhbHVlKTtcblx0fVxuXG5cdGdldCBjaGVja2VkKCkge1xuXHRcdHJldHVybiB0aGlzLl9jaGVja2VkKCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX2Rpc2FibGVkID0gc2lnbmFsKHRoaXMuX2Nka01lbnVJdGVtLmRpc2FibGVkKTtcblx0QElucHV0KHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pXG5cdHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuXHRcdHRoaXMuX2Nka01lbnVJdGVtLmRpc2FibGVkID0gdmFsdWU7XG5cdFx0dGhpcy5fZGlzYWJsZWQuc2V0KHZhbHVlKTtcblx0fVxuXHRnZXQgZGlzYWJsZWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2Rpc2FibGVkKCk7XG5cdH1cblxuXHRAT3V0cHV0KClcblx0cHVibGljIHJlYWRvbmx5IHRyaWdnZXJlZCA9IHRoaXMuX2Nka01lbnVJdGVtLnRyaWdnZXJlZDtcbn1cbiJdfQ==