import { CdkMenuItemRadio } from '@angular/cdk/menu';
import { Directive, Input, Output, booleanAttribute, inject, signal } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/menu";
export class BrnMenuItemRadioDirective {
    constructor() {
        this._cdkMenuItem = inject(CdkMenuItemRadio, { host: true });
        this._checked = signal(this._cdkMenuItem.checked);
        this._disabled = signal(this._cdkMenuItem.disabled);
        this.triggered = this._cdkMenuItem.triggered;
    }
    set checked(value) {
        this._cdkMenuItem.checked = value;
        this._checked.set(value);
    }
    get checked() {
        return this._checked();
    }
    set disabled(value) {
        this._cdkMenuItem.disabled = value;
        this._disabled.set(value);
    }
    get disabled() {
        return this._disabled();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnMenuItemRadioDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "16.1.0", version: "17.3.5", type: BrnMenuItemRadioDirective, isStandalone: true, selector: "[brnMenuItemRadio]", inputs: { checked: ["checked", "checked", booleanAttribute], disabled: ["disabled", "disabled", booleanAttribute] }, outputs: { triggered: "triggered" }, host: { properties: { "class.checked": "_checked()", "disabled": "_disabled()" } }, hostDirectives: [{ directive: i1.CdkMenuItemRadio }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnMenuItemRadioDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnMenuItemRadio]',
                    standalone: true,
                    hostDirectives: [CdkMenuItemRadio],
                    host: {
                        '[class.checked]': '_checked()',
                        '[disabled]': '_disabled()',
                    },
                }]
        }], propDecorators: { checked: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], disabled: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], triggered: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLW1lbnUtaXRlbS1yYWRpby5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL21lbnUvYnJhaW4vc3JjL2xpYi9icm4tbWVudS1pdGVtLXJhZGlvLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBVzNGLE1BQU0sT0FBTyx5QkFBeUI7SUFUdEM7UUFVa0IsaUJBQVksR0FBRyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUV0RCxhQUFRLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7UUFVN0MsY0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBV2xELGNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztLQUN4RDtJQXJCQSxJQUNJLE9BQU8sQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBQ0QsSUFBSSxPQUFPO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUdELElBQ0ksUUFBUSxDQUFDLEtBQWM7UUFDMUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ25DLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUN6QixDQUFDOzhHQXJCVyx5QkFBeUI7a0dBQXpCLHlCQUF5QixnR0FJakIsZ0JBQWdCLHNDQVVoQixnQkFBZ0I7OzJGQWR4Qix5QkFBeUI7a0JBVHJDLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLGNBQWMsRUFBRSxDQUFDLGdCQUFnQixDQUFDO29CQUNsQyxJQUFJLEVBQUU7d0JBQ0wsaUJBQWlCLEVBQUUsWUFBWTt3QkFDL0IsWUFBWSxFQUFFLGFBQWE7cUJBQzNCO2lCQUNEOzhCQU1JLE9BQU87c0JBRFYsS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtnQkFXbEMsUUFBUTtzQkFEWCxLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQVV0QixTQUFTO3NCQUR4QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2RrTWVudUl0ZW1SYWRpbyB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9tZW51JztcbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE91dHB1dCwgYm9vbGVhbkF0dHJpYnV0ZSwgaW5qZWN0LCBzaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2Jybk1lbnVJdGVtUmFkaW9dJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aG9zdERpcmVjdGl2ZXM6IFtDZGtNZW51SXRlbVJhZGlvXSxcblx0aG9zdDoge1xuXHRcdCdbY2xhc3MuY2hlY2tlZF0nOiAnX2NoZWNrZWQoKScsXG5cdFx0J1tkaXNhYmxlZF0nOiAnX2Rpc2FibGVkKCknLFxuXHR9LFxufSlcbmV4cG9ydCBjbGFzcyBCcm5NZW51SXRlbVJhZGlvRGlyZWN0aXZlIHtcblx0cHJpdmF0ZSByZWFkb25seSBfY2RrTWVudUl0ZW0gPSBpbmplY3QoQ2RrTWVudUl0ZW1SYWRpbywgeyBob3N0OiB0cnVlIH0pO1xuXG5cdHByb3RlY3RlZCByZWFkb25seSBfY2hlY2tlZCA9IHNpZ25hbCh0aGlzLl9jZGtNZW51SXRlbS5jaGVja2VkKTtcblx0QElucHV0KHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pXG5cdHNldCBjaGVja2VkKHZhbHVlOiBib29sZWFuKSB7XG5cdFx0dGhpcy5fY2RrTWVudUl0ZW0uY2hlY2tlZCA9IHZhbHVlO1xuXHRcdHRoaXMuX2NoZWNrZWQuc2V0KHZhbHVlKTtcblx0fVxuXHRnZXQgY2hlY2tlZCgpIHtcblx0XHRyZXR1cm4gdGhpcy5fY2hlY2tlZCgpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHJlYWRvbmx5IF9kaXNhYmxlZCA9IHNpZ25hbCh0aGlzLl9jZGtNZW51SXRlbS5kaXNhYmxlZCk7XG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9jZGtNZW51SXRlbS5kaXNhYmxlZCA9IHZhbHVlO1xuXHRcdHRoaXMuX2Rpc2FibGVkLnNldCh2YWx1ZSk7XG5cdH1cblx0Z2V0IGRpc2FibGVkKCkge1xuXHRcdHJldHVybiB0aGlzLl9kaXNhYmxlZCgpO1xuXHR9XG5cblx0QE91dHB1dCgpXG5cdHB1YmxpYyByZWFkb25seSB0cmlnZ2VyZWQgPSB0aGlzLl9jZGtNZW51SXRlbS50cmlnZ2VyZWQ7XG59XG4iXX0=