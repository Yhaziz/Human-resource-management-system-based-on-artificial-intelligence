import { Directive, ElementRef, Input, inject } from '@angular/core';
import { BrnDialogTriggerDirective } from '@spartan-ng/ui-dialog-brain';
import * as i0 from "@angular/core";
export class BrnPopoverTriggerDirective extends BrnDialogTriggerDirective {
    constructor() {
        super();
        this._host = inject(ElementRef, { host: true });
        if (!this._brnDialog)
            return;
        this._brnDialog.attachTo = this._host.nativeElement;
        this._brnDialog.closeOnOutsidePointerEvents = true;
    }
    set brnPopoverTriggerFor(brnDialog) {
        brnDialog.attachTo = this._host.nativeElement;
        brnDialog.closeOnOutsidePointerEvents = true;
        super.brnDialogTriggerFor = brnDialog;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnPopoverTriggerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnPopoverTriggerDirective, isStandalone: true, selector: "button[brnPopoverTrigger],button[brnPopoverTriggerFor]", inputs: { brnPopoverTriggerFor: "brnPopoverTriggerFor" }, host: { attributes: { "aria-haspopup": "dialog" }, properties: { "id": "id()", "attr.aria-expanded": "state() === 'open' ? 'true': 'false'", "attr.data-state": "state()", "attr.aria-controls": "dialogId" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnPopoverTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnPopoverTrigger],button[brnPopoverTriggerFor]',
                    standalone: true,
                    host: {
                        '[id]': 'id()',
                        'aria-haspopup': 'dialog',
                        '[attr.aria-expanded]': "state() === 'open' ? 'true': 'false'",
                        '[attr.data-state]': 'state()',
                        '[attr.aria-controls]': 'dialogId',
                    },
                }]
        }], ctorParameters: () => [], propDecorators: { brnPopoverTriggerFor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLXBvcG92ZXItdHJpZ2dlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL3BvcG92ZXIvYnJhaW4vc3JjL2xpYi9icm4tcG9wb3Zlci10cmlnZ2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztBQWN4RSxNQUFNLE9BQU8sMEJBQTJCLFNBQVEseUJBQXlCO0lBR3hFO1FBQ0MsS0FBSyxFQUFFLENBQUM7UUFIRCxVQUFLLEdBQUcsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBSWxELElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtZQUFFLE9BQU87UUFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUM7UUFDcEQsSUFBSSxDQUFDLFVBQVUsQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUM7SUFDcEQsQ0FBQztJQUVELElBQ0ksb0JBQW9CLENBQUMsU0FBOEI7UUFDdEQsU0FBUyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQztRQUM5QyxTQUFTLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDO1FBQzdDLEtBQUssQ0FBQyxtQkFBbUIsR0FBRyxTQUFTLENBQUM7SUFDdkMsQ0FBQzs4R0FmVywwQkFBMEI7a0dBQTFCLDBCQUEwQjs7MkZBQTFCLDBCQUEwQjtrQkFYdEMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsd0RBQXdEO29CQUNsRSxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNMLE1BQU0sRUFBRSxNQUFNO3dCQUNkLGVBQWUsRUFBRSxRQUFRO3dCQUN6QixzQkFBc0IsRUFBRSxzQ0FBc0M7d0JBQzlELG1CQUFtQixFQUFFLFNBQVM7d0JBQzlCLHNCQUFzQixFQUFFLFVBQVU7cUJBQ2xDO2lCQUNEO3dEQVlJLG9CQUFvQjtzQkFEdkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnJuRGlhbG9nVHJpZ2dlckRpcmVjdGl2ZSB9IGZyb20gJ0BzcGFydGFuLW5nL3VpLWRpYWxvZy1icmFpbic7XG5pbXBvcnQgdHlwZSB7IEJyblBvcG92ZXJDb21wb25lbnQgfSBmcm9tICcuL2Jybi1wb3BvdmVyLmNvbXBvbmVudCc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ2J1dHRvblticm5Qb3BvdmVyVHJpZ2dlcl0sYnV0dG9uW2JyblBvcG92ZXJUcmlnZ2VyRm9yXScsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGhvc3Q6IHtcblx0XHQnW2lkXSc6ICdpZCgpJyxcblx0XHQnYXJpYS1oYXNwb3B1cCc6ICdkaWFsb2cnLFxuXHRcdCdbYXR0ci5hcmlhLWV4cGFuZGVkXSc6IFwic3RhdGUoKSA9PT0gJ29wZW4nID8gJ3RydWUnOiAnZmFsc2UnXCIsXG5cdFx0J1thdHRyLmRhdGEtc3RhdGVdJzogJ3N0YXRlKCknLFxuXHRcdCdbYXR0ci5hcmlhLWNvbnRyb2xzXSc6ICdkaWFsb2dJZCcsXG5cdH0sXG59KVxuZXhwb3J0IGNsYXNzIEJyblBvcG92ZXJUcmlnZ2VyRGlyZWN0aXZlIGV4dGVuZHMgQnJuRGlhbG9nVHJpZ2dlckRpcmVjdGl2ZSB7XG5cdHByaXZhdGUgX2hvc3QgPSBpbmplY3QoRWxlbWVudFJlZiwgeyBob3N0OiB0cnVlIH0pO1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cdFx0aWYgKCF0aGlzLl9icm5EaWFsb2cpIHJldHVybjtcblx0XHR0aGlzLl9icm5EaWFsb2cuYXR0YWNoVG8gPSB0aGlzLl9ob3N0Lm5hdGl2ZUVsZW1lbnQ7XG5cdFx0dGhpcy5fYnJuRGlhbG9nLmNsb3NlT25PdXRzaWRlUG9pbnRlckV2ZW50cyA9IHRydWU7XG5cdH1cblxuXHRASW5wdXQoKVxuXHRzZXQgYnJuUG9wb3ZlclRyaWdnZXJGb3IoYnJuRGlhbG9nOiBCcm5Qb3BvdmVyQ29tcG9uZW50KSB7XG5cdFx0YnJuRGlhbG9nLmF0dGFjaFRvID0gdGhpcy5faG9zdC5uYXRpdmVFbGVtZW50O1xuXHRcdGJybkRpYWxvZy5jbG9zZU9uT3V0c2lkZVBvaW50ZXJFdmVudHMgPSB0cnVlO1xuXHRcdHN1cGVyLmJybkRpYWxvZ1RyaWdnZXJGb3IgPSBicm5EaWFsb2c7XG5cdH1cbn1cbiJdfQ==