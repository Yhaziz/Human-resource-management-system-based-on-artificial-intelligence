import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, effect, forwardRef, numberAttribute, signal, untracked, } from '@angular/core';
import { BrnDialogComponent } from '@spartan-ng/ui-dialog-brain';
import * as i0 from "@angular/core";
export class BrnPopoverComponent extends BrnDialogComponent {
    set sideOffset(value) {
        this._sideOffset.set(value);
    }
    set align(value) {
        this._align.set(value);
    }
    constructor() {
        super();
        this._sideOffset = signal(0);
        this._align = signal('center');
        this.hasBackdrop = false;
        this.ariaDescribedBy = '';
        this.ariaLabelledBy = '';
        this.scrollStrategy = this.ssos.reposition();
        effect(() => {
            const align = this._align();
            this.attachPositions = [
                {
                    originX: align,
                    originY: 'bottom',
                    overlayX: align,
                    overlayY: 'top',
                },
                {
                    originX: align,
                    originY: 'top',
                    overlayX: align,
                    overlayY: 'bottom',
                },
            ];
            this.applySideOffset(untracked(this._sideOffset));
        });
        effect(() => {
            this.applySideOffset(this._sideOffset());
        });
    }
    applySideOffset(sideOffset) {
        this.attachPositions = (this._options['attachPositions'] ?? []).map((position) => ({
            ...position,
            offsetY: position.originY === 'top' ? -sideOffset : sideOffset,
        }));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnPopoverComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "16.1.0", version: "17.3.5", type: BrnPopoverComponent, isStandalone: true, selector: "brn-popover", inputs: { sideOffset: ["sideOffset", "sideOffset", numberAttribute], align: "align" }, providers: [
            {
                provide: BrnDialogComponent,
                useExisting: forwardRef(() => BrnPopoverComponent),
            },
        ], exportAs: ["brnPopover"], usesInheritance: true, ngImport: i0, template: `
		<ng-content />
	`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnPopoverComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-popover',
                    standalone: true,
                    template: `
		<ng-content />
	`,
                    providers: [
                        {
                            provide: BrnDialogComponent,
                            useExisting: forwardRef(() => BrnPopoverComponent),
                        },
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    exportAs: 'brnPopover',
                }]
        }], ctorParameters: () => [], propDecorators: { sideOffset: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], align: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLXBvcG92ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS9wb3BvdmVyL2JyYWluL3NyYy9saWIvYnJuLXBvcG92ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTix1QkFBdUIsRUFDdkIsU0FBUyxFQUNULEtBQUssRUFDTCxpQkFBaUIsRUFDakIsTUFBTSxFQUNOLFVBQVUsRUFDVixlQUFlLEVBQ2YsTUFBTSxFQUNOLFNBQVMsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFtQmpFLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxrQkFBa0I7SUFFMUQsSUFDSSxVQUFVLENBQUMsS0FBYTtRQUMzQixJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBR0QsSUFDSSxLQUFLLENBQUMsS0FBc0I7UUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVEO1FBQ0MsS0FBSyxFQUFFLENBQUM7UUFiUSxnQkFBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQU14QixXQUFNLEdBQUcsTUFBTSxDQUFrQixRQUFRLENBQUMsQ0FBQztRQVEzRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFFN0MsTUFBTSxDQUFDLEdBQUcsRUFBRTtZQUNYLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUM1QixJQUFJLENBQUMsZUFBZSxHQUFHO2dCQUN0QjtvQkFDQyxPQUFPLEVBQUUsS0FBSztvQkFDZCxPQUFPLEVBQUUsUUFBUTtvQkFDakIsUUFBUSxFQUFFLEtBQUs7b0JBQ2YsUUFBUSxFQUFFLEtBQUs7aUJBQ2Y7Z0JBQ0Q7b0JBQ0MsT0FBTyxFQUFFLEtBQUs7b0JBQ2QsT0FBTyxFQUFFLEtBQUs7b0JBQ2QsUUFBUSxFQUFFLEtBQUs7b0JBQ2YsUUFBUSxFQUFFLFFBQVE7aUJBQ2xCO2FBQ0QsQ0FBQztZQUNGLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ25ELENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLEdBQUcsRUFBRTtZQUNYLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU8sZUFBZSxDQUFDLFVBQWtCO1FBQ3pDLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ2xGLEdBQUcsUUFBUTtZQUNYLE9BQU8sRUFBRSxRQUFRLENBQUMsT0FBTyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFVBQVU7U0FDOUQsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzhHQWpEVyxtQkFBbUI7a0dBQW5CLG1CQUFtQixrR0FFWCxlQUFlLGdDQVp4QjtZQUNWO2dCQUNDLE9BQU8sRUFBRSxrQkFBa0I7Z0JBQzNCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsbUJBQW1CLENBQUM7YUFDbEQ7U0FDRCwyRUFSUzs7RUFFVDs7MkZBV1csbUJBQW1CO2tCQWhCL0IsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsYUFBYTtvQkFDdkIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRTs7RUFFVDtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Y7NEJBQ0MsT0FBTyxFQUFFLGtCQUFrQjs0QkFDM0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsb0JBQW9CLENBQUM7eUJBQ2xEO3FCQUNEO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsUUFBUSxFQUFFLFlBQVk7aUJBQ3RCO3dEQUlJLFVBQVU7c0JBRGIsS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUU7Z0JBT2pDLEtBQUs7c0JBRFIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuXHRDb21wb25lbnQsXG5cdElucHV0LFxuXHRWaWV3RW5jYXBzdWxhdGlvbixcblx0ZWZmZWN0LFxuXHRmb3J3YXJkUmVmLFxuXHRudW1iZXJBdHRyaWJ1dGUsXG5cdHNpZ25hbCxcblx0dW50cmFja2VkLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJybkRpYWxvZ0NvbXBvbmVudCB9IGZyb20gJ0BzcGFydGFuLW5nL3VpLWRpYWxvZy1icmFpbic7XG5cbmV4cG9ydCB0eXBlIEJyblBvcG92ZXJBbGlnbiA9ICdzdGFydCcgfCAnY2VudGVyJyB8ICdlbmQnO1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnYnJuLXBvcG92ZXInLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdDxuZy1jb250ZW50IC8+XG5cdGAsXG5cdHByb3ZpZGVyczogW1xuXHRcdHtcblx0XHRcdHByb3ZpZGU6IEJybkRpYWxvZ0NvbXBvbmVudCxcblx0XHRcdHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEJyblBvcG92ZXJDb21wb25lbnQpLFxuXHRcdH0sXG5cdF0sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuXHRleHBvcnRBczogJ2JyblBvcG92ZXInLFxufSlcbmV4cG9ydCBjbGFzcyBCcm5Qb3BvdmVyQ29tcG9uZW50IGV4dGVuZHMgQnJuRGlhbG9nQ29tcG9uZW50IHtcblx0cHJpdmF0ZSByZWFkb25seSBfc2lkZU9mZnNldCA9IHNpZ25hbCgwKTtcblx0QElucHV0KHsgdHJhbnNmb3JtOiBudW1iZXJBdHRyaWJ1dGUgfSlcblx0c2V0IHNpZGVPZmZzZXQodmFsdWU6IG51bWJlcikge1xuXHRcdHRoaXMuX3NpZGVPZmZzZXQuc2V0KHZhbHVlKTtcblx0fVxuXG5cdHByaXZhdGUgcmVhZG9ubHkgX2FsaWduID0gc2lnbmFsPEJyblBvcG92ZXJBbGlnbj4oJ2NlbnRlcicpO1xuXHRASW5wdXQoKVxuXHRzZXQgYWxpZ24odmFsdWU6IEJyblBvcG92ZXJBbGlnbikge1xuXHRcdHRoaXMuX2FsaWduLnNldCh2YWx1ZSk7XG5cdH1cblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRzdXBlcigpO1xuXHRcdHRoaXMuaGFzQmFja2Ryb3AgPSBmYWxzZTtcblx0XHR0aGlzLmFyaWFEZXNjcmliZWRCeSA9ICcnO1xuXHRcdHRoaXMuYXJpYUxhYmVsbGVkQnkgPSAnJztcblx0XHR0aGlzLnNjcm9sbFN0cmF0ZWd5ID0gdGhpcy5zc29zLnJlcG9zaXRpb24oKTtcblxuXHRcdGVmZmVjdCgoKSA9PiB7XG5cdFx0XHRjb25zdCBhbGlnbiA9IHRoaXMuX2FsaWduKCk7XG5cdFx0XHR0aGlzLmF0dGFjaFBvc2l0aW9ucyA9IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG9yaWdpblg6IGFsaWduLFxuXHRcdFx0XHRcdG9yaWdpblk6ICdib3R0b20nLFxuXHRcdFx0XHRcdG92ZXJsYXlYOiBhbGlnbixcblx0XHRcdFx0XHRvdmVybGF5WTogJ3RvcCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRvcmlnaW5YOiBhbGlnbixcblx0XHRcdFx0XHRvcmlnaW5ZOiAndG9wJyxcblx0XHRcdFx0XHRvdmVybGF5WDogYWxpZ24sXG5cdFx0XHRcdFx0b3ZlcmxheVk6ICdib3R0b20nLFxuXHRcdFx0XHR9LFxuXHRcdFx0XTtcblx0XHRcdHRoaXMuYXBwbHlTaWRlT2Zmc2V0KHVudHJhY2tlZCh0aGlzLl9zaWRlT2Zmc2V0KSk7XG5cdFx0fSk7XG5cblx0XHRlZmZlY3QoKCkgPT4ge1xuXHRcdFx0dGhpcy5hcHBseVNpZGVPZmZzZXQodGhpcy5fc2lkZU9mZnNldCgpKTtcblx0XHR9KTtcblx0fVxuXG5cdHByaXZhdGUgYXBwbHlTaWRlT2Zmc2V0KHNpZGVPZmZzZXQ6IG51bWJlcikge1xuXHRcdHRoaXMuYXR0YWNoUG9zaXRpb25zID0gKHRoaXMuX29wdGlvbnNbJ2F0dGFjaFBvc2l0aW9ucyddID8/IFtdKS5tYXAoKHBvc2l0aW9uKSA9PiAoe1xuXHRcdFx0Li4ucG9zaXRpb24sXG5cdFx0XHRvZmZzZXRZOiBwb3NpdGlvbi5vcmlnaW5ZID09PSAndG9wJyA/IC1zaWRlT2Zmc2V0IDogc2lkZU9mZnNldCxcblx0XHR9KSk7XG5cdH1cbn1cbiJdfQ==