import { type NumberInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class BrnProgressComponent {
    protected readonly _value: import("@angular/core").WritableSignal<number | null | undefined>;
    readonly $value: import("@angular/core").Signal<number | null | undefined>;
    set value(newValue: NumberInput);
    protected readonly _max: import("@angular/core").WritableSignal<number>;
    readonly $max: import("@angular/core").Signal<number>;
    set max(value: NumberInput);
    getValueLabel: (value: number, max: number) => string;
    isNumber(): boolean;
    progressState: import("@angular/core").Signal<"indeterminate" | "complete" | "loading">;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnProgressComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BrnProgressComponent, "brn-progress", never, { "value": { "alias": "value"; "required": false; }; "max": { "alias": "max"; "required": false; }; "getValueLabel": { "alias": "getValueLabel"; "required": false; }; }, {}, never, ["*"], true, never>;
}
