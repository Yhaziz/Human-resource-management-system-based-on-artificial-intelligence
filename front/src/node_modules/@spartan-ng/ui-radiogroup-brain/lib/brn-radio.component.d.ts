import { type FocusOrigin, type FocusableOption } from '@angular/cdk/a11y';
import { ChangeDetectorRef, ElementRef, EventEmitter, type AfterViewInit, type DoCheck, type OnDestroy, type OnInit } from '@angular/core';
import { BrnRadioChange } from './brn-radio-change';
import { BrnRadioGroupComponent } from './brn-radio-group.component';
import * as i0 from "@angular/core";
export declare class BrnRadioComponent implements FocusableOption, OnInit, AfterViewInit, DoCheck, OnDestroy {
    private _focusMonitor;
    private _elementRef;
    private _radioDispatcher;
    protected _changeDetector: ChangeDetectorRef;
    radioGroup: BrnRadioGroupComponent | null;
    private _disabled;
    get disabled(): boolean;
    set disabled(value: boolean);
    private _defaultTabIndex;
    set defaultTabIndex(value: number);
    private _tabIndex;
    get tabIndex(): number;
    set tabIndex(value: number);
    private _uniqueId;
    id: string;
    name: string;
    ariaLabel?: string;
    ariaLabelledby?: string;
    ariaDescribedby?: string;
    private _checked;
    get checked(): boolean;
    set checked(value: boolean);
    private _value;
    get value(): any;
    set value(value: any);
    private _required;
    get required(): boolean;
    set required(value: boolean);
    readonly change: EventEmitter<BrnRadioChange>;
    get inputId(): string;
    private _removeUniqueSelectionListener;
    private _previousTabIndex;
    _inputElement?: ElementRef<HTMLInputElement>;
    /** Focuses the radio button. */
    focus(origin?: FocusOrigin): void;
    _markForCheck(): void;
    ngOnInit(): void;
    ngDoCheck(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /** Dispatch change event with current value. */
    private _emitChangeEvent;
    _onInputClick(event: Event): void;
    _onInputInteraction(event: Event): void;
    /** Triggered when the user clicks on the touch target. */
    _onTouchTargetClick(event: Event): void;
    protected _setDisabled(value: boolean): void;
    private _updateTabIndex;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnRadioComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BrnRadioComponent, "brn-radio", ["brnRadio"], { "disabled": { "alias": "disabled"; "required": false; }; "defaultTabIndex": { "alias": "defaultTabIndex"; "required": false; }; "tabIndex": { "alias": "tabIndex"; "required": false; }; "id": { "alias": "id"; "required": false; }; "name": { "alias": "name"; "required": false; }; "ariaLabel": { "alias": "aria-label"; "required": false; }; "ariaLabelledby": { "alias": "aria-labelledby"; "required": false; }; "ariaDescribedby": { "alias": "aria-describedby"; "required": false; }; "checked": { "alias": "checked"; "required": false; }; "value": { "alias": "value"; "required": true; }; "required": { "alias": "required"; "required": false; }; }, { "change": "change"; }, never, ["[target],[indicator]", "*"], true, never>;
    static ngAcceptInputType_disabled: unknown;
    static ngAcceptInputType_defaultTabIndex: unknown;
    static ngAcceptInputType_tabIndex: unknown;
    static ngAcceptInputType_checked: unknown;
    static ngAcceptInputType_required: unknown;
}
