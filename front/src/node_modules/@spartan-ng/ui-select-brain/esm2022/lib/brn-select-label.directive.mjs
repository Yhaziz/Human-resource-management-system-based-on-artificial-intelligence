import { Directive, inject } from '@angular/core';
import { BrnLabelDirective } from '@spartan-ng/ui-label-brain';
import { BrnSelectGroupDirective } from './brn-select-group.directive';
import * as i0 from "@angular/core";
import * as i1 from "@spartan-ng/ui-label-brain";
export class BrnSelectLabelDirective {
    constructor() {
        this.group = inject(BrnSelectGroupDirective, { optional: true });
        this.label = inject(BrnLabelDirective, { host: true });
        this.group?.labelledBy.set(this.label.id);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSelectLabelDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSelectLabelDirective, isStandalone: true, selector: "[brnSelectLabel]", hostDirectives: [{ directive: i1.BrnLabelDirective }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSelectLabelDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSelectLabel]',
                    hostDirectives: [BrnLabelDirective],
                    standalone: true,
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLXNlbGVjdC1sYWJlbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL3NlbGVjdC9icmFpbi9zcmMvbGliL2Jybi1zZWxlY3QtbGFiZWwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQy9ELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOzs7QUFPdkUsTUFBTSxPQUFPLHVCQUF1QjtJQUluQztRQUhpQixVQUFLLEdBQUcsTUFBTSxDQUFDLHVCQUF1QixFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDNUQsVUFBSyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBR2xFLElBQUksQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7OEdBTlcsdUJBQXVCO2tHQUF2Qix1QkFBdUI7OzJGQUF2Qix1QkFBdUI7a0JBTG5DLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsY0FBYyxFQUFFLENBQUMsaUJBQWlCLENBQUM7b0JBQ25DLFVBQVUsRUFBRSxJQUFJO2lCQUNoQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCcm5MYWJlbERpcmVjdGl2ZSB9IGZyb20gJ0BzcGFydGFuLW5nL3VpLWxhYmVsLWJyYWluJztcbmltcG9ydCB7IEJyblNlbGVjdEdyb3VwRGlyZWN0aXZlIH0gZnJvbSAnLi9icm4tc2VsZWN0LWdyb3VwLmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1ticm5TZWxlY3RMYWJlbF0nLFxuXHRob3N0RGlyZWN0aXZlczogW0JybkxhYmVsRGlyZWN0aXZlXSxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgQnJuU2VsZWN0TGFiZWxEaXJlY3RpdmUge1xuXHRwcml2YXRlIHJlYWRvbmx5IGdyb3VwID0gaW5qZWN0KEJyblNlbGVjdEdyb3VwRGlyZWN0aXZlLCB7IG9wdGlvbmFsOiB0cnVlIH0pO1xuXHRwcml2YXRlIHJlYWRvbmx5IGxhYmVsID0gaW5qZWN0KEJybkxhYmVsRGlyZWN0aXZlLCB7IGhvc3Q6IHRydWUgfSk7XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5ncm91cD8ubGFiZWxsZWRCeS5zZXQodGhpcy5sYWJlbC5pZCk7XG5cdH1cbn1cbiJdfQ==