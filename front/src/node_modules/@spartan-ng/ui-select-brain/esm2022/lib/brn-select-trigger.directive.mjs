import { Directive, ElementRef, computed, inject } from '@angular/core';
import { NgControl } from '@angular/forms';
import { BrnSelectService } from './brn-select.service';
import * as i0 from "@angular/core";
export class BrnSelectTriggerDirective {
    constructor() {
        this.el = inject(ElementRef);
        this._selectService = inject(BrnSelectService);
        this._ngControl = inject(NgControl, { optional: true });
        this.isExpanded = this._selectService.isExpanded;
        this.selectTriggerId = computed(() => `${this._selectService.id()}--trigger`);
        this.selectContentId = computed(() => `${this._selectService.id()}--content`);
        this.selectDisable = computed(() => this._selectService.disabled());
        this.selectTriggerLabelledBy = computed(() => {
            if (this._selectService.value() && this._selectService.value().length > 0) {
                return `${this._selectService.labelId()} ${this._selectService.id()}--value`;
            }
            return this._selectService.labelId();
        });
        if (!this._selectService)
            return;
        this._selectService._setSelectTrigger(this);
    }
    ngAfterViewInit() {
        this._selectService.setTriggerWidth(this.el.nativeElement.offsetWidth);
    }
    focus() {
        this.el.nativeElement.focus();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSelectTriggerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSelectTriggerDirective, isStandalone: true, selector: "[brnSelectTrigger]", host: { attributes: { "role": "combobox", "aria-autocomplete": "none", "type": "button" }, properties: { "attr.id": "selectTriggerId()", "disabled": "selectDisable()", "attr.aria-expanded": "isExpanded()", "attr.aria-controls": "selectContentId() + ''", "attr.aria-labelledBy": "selectTriggerLabelledBy()", "attr.dir": "_selectService.dir()", "class.ng-invalid": "this._ngControl?.invalid || null", "class.ng-dirty": "this._ngControl?.dirty || null", "class.ng-valid": "this._ngControl?.valid || null", "class.ng-touched": "this._ngControl?.touched || null", "class.ng-untouched": "this._ngControl?.untouched || null", "class.ng-pristine": "this._ngControl?.pristine || null" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSelectTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSelectTrigger]',
                    standalone: true,
                    host: {
                        role: 'combobox',
                        '[attr.id]': 'selectTriggerId()',
                        '[disabled]': 'selectDisable()',
                        '[attr.aria-expanded]': 'isExpanded()',
                        '[attr.aria-controls]': "selectContentId() + ''",
                        '[attr.aria-labelledBy]': 'selectTriggerLabelledBy()',
                        'aria-autocomplete': 'none',
                        '[attr.dir]': '_selectService.dir()',
                        '[class.ng-invalid]': 'this._ngControl?.invalid || null',
                        '[class.ng-dirty]': 'this._ngControl?.dirty || null',
                        '[class.ng-valid]': 'this._ngControl?.valid || null',
                        '[class.ng-touched]': 'this._ngControl?.touched || null',
                        '[class.ng-untouched]': 'this._ngControl?.untouched || null',
                        '[class.ng-pristine]': 'this._ngControl?.pristine || null',
                        type: 'button',
                    },
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLXNlbGVjdC10cmlnZ2VyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWkvc2VsZWN0L2JyYWluL3NyYy9saWIvYnJuLXNlbGVjdC10cmlnZ2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFzQixNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBdUJ4RCxNQUFNLE9BQU8seUJBQXlCO0lBZ0JyQztRQWZpQixPQUFFLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3RCLG1CQUFjLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDMUMsZUFBVSxHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUV0RCxlQUFVLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUM7UUFDNUMsb0JBQWUsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUN6RSxvQkFBZSxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3pFLGtCQUFhLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUMvRCw0QkFBdUIsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ3ZELElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztnQkFDM0UsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDO1lBQzlFLENBQUM7WUFDRCxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdEMsQ0FBQyxDQUFDLENBQUM7UUFHRixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWM7WUFBRSxPQUFPO1FBQ2pDLElBQUksQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELGVBQWU7UUFDZCxJQUFJLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU0sS0FBSztRQUNYLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQy9CLENBQUM7OEdBM0JXLHlCQUF5QjtrR0FBekIseUJBQXlCOzsyRkFBekIseUJBQXlCO2tCQXJCckMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNMLElBQUksRUFBRSxVQUFVO3dCQUNoQixXQUFXLEVBQUUsbUJBQW1CO3dCQUNoQyxZQUFZLEVBQUUsaUJBQWlCO3dCQUMvQixzQkFBc0IsRUFBRSxjQUFjO3dCQUN0QyxzQkFBc0IsRUFBRSx3QkFBd0I7d0JBQ2hELHdCQUF3QixFQUFFLDJCQUEyQjt3QkFDckQsbUJBQW1CLEVBQUUsTUFBTTt3QkFDM0IsWUFBWSxFQUFFLHNCQUFzQjt3QkFDcEMsb0JBQW9CLEVBQUUsa0NBQWtDO3dCQUN4RCxrQkFBa0IsRUFBRSxnQ0FBZ0M7d0JBQ3BELGtCQUFrQixFQUFFLGdDQUFnQzt3QkFDcEQsb0JBQW9CLEVBQUUsa0NBQWtDO3dCQUN4RCxzQkFBc0IsRUFBRSxvQ0FBb0M7d0JBQzVELHFCQUFxQixFQUFFLG1DQUFtQzt3QkFDMUQsSUFBSSxFQUFFLFFBQVE7cUJBQ2Q7aUJBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIGNvbXB1dGVkLCBpbmplY3QsIHR5cGUgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQnJuU2VsZWN0U2VydmljZSB9IGZyb20gJy4vYnJuLXNlbGVjdC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2JyblNlbGVjdFRyaWdnZXJdJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aG9zdDoge1xuXHRcdHJvbGU6ICdjb21ib2JveCcsXG5cdFx0J1thdHRyLmlkXSc6ICdzZWxlY3RUcmlnZ2VySWQoKScsXG5cdFx0J1tkaXNhYmxlZF0nOiAnc2VsZWN0RGlzYWJsZSgpJyxcblx0XHQnW2F0dHIuYXJpYS1leHBhbmRlZF0nOiAnaXNFeHBhbmRlZCgpJyxcblx0XHQnW2F0dHIuYXJpYS1jb250cm9sc10nOiBcInNlbGVjdENvbnRlbnRJZCgpICsgJydcIixcblx0XHQnW2F0dHIuYXJpYS1sYWJlbGxlZEJ5XSc6ICdzZWxlY3RUcmlnZ2VyTGFiZWxsZWRCeSgpJyxcblx0XHQnYXJpYS1hdXRvY29tcGxldGUnOiAnbm9uZScsXG5cdFx0J1thdHRyLmRpcl0nOiAnX3NlbGVjdFNlcnZpY2UuZGlyKCknLFxuXHRcdCdbY2xhc3MubmctaW52YWxpZF0nOiAndGhpcy5fbmdDb250cm9sPy5pbnZhbGlkIHx8IG51bGwnLFxuXHRcdCdbY2xhc3MubmctZGlydHldJzogJ3RoaXMuX25nQ29udHJvbD8uZGlydHkgfHwgbnVsbCcsXG5cdFx0J1tjbGFzcy5uZy12YWxpZF0nOiAndGhpcy5fbmdDb250cm9sPy52YWxpZCB8fCBudWxsJyxcblx0XHQnW2NsYXNzLm5nLXRvdWNoZWRdJzogJ3RoaXMuX25nQ29udHJvbD8udG91Y2hlZCB8fCBudWxsJyxcblx0XHQnW2NsYXNzLm5nLXVudG91Y2hlZF0nOiAndGhpcy5fbmdDb250cm9sPy51bnRvdWNoZWQgfHwgbnVsbCcsXG5cdFx0J1tjbGFzcy5uZy1wcmlzdGluZV0nOiAndGhpcy5fbmdDb250cm9sPy5wcmlzdGluZSB8fCBudWxsJyxcblx0XHR0eXBlOiAnYnV0dG9uJyxcblx0fSxcbn0pXG5leHBvcnQgY2xhc3MgQnJuU2VsZWN0VHJpZ2dlckRpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuXHRwcml2YXRlIHJlYWRvbmx5IGVsID0gaW5qZWN0KEVsZW1lbnRSZWYpO1xuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX3NlbGVjdFNlcnZpY2UgPSBpbmplY3QoQnJuU2VsZWN0U2VydmljZSk7XG5cdHByb3RlY3RlZCByZWFkb25seSBfbmdDb250cm9sID0gaW5qZWN0KE5nQ29udHJvbCwgeyBvcHRpb25hbDogdHJ1ZSB9KTtcblxuXHRwdWJsaWMgcmVhZG9ubHkgaXNFeHBhbmRlZCA9IHRoaXMuX3NlbGVjdFNlcnZpY2UuaXNFeHBhbmRlZDtcblx0cHVibGljIHJlYWRvbmx5IHNlbGVjdFRyaWdnZXJJZCA9IGNvbXB1dGVkKCgpID0+IGAke3RoaXMuX3NlbGVjdFNlcnZpY2UuaWQoKX0tLXRyaWdnZXJgKTtcblx0cHVibGljIHJlYWRvbmx5IHNlbGVjdENvbnRlbnRJZCA9IGNvbXB1dGVkKCgpID0+IGAke3RoaXMuX3NlbGVjdFNlcnZpY2UuaWQoKX0tLWNvbnRlbnRgKTtcblx0cHVibGljIHJlYWRvbmx5IHNlbGVjdERpc2FibGUgPSBjb21wdXRlZCgoKSA9PiB0aGlzLl9zZWxlY3RTZXJ2aWNlLmRpc2FibGVkKCkpO1xuXHRwdWJsaWMgcmVhZG9ubHkgc2VsZWN0VHJpZ2dlckxhYmVsbGVkQnkgPSBjb21wdXRlZCgoKSA9PiB7XG5cdFx0aWYgKHRoaXMuX3NlbGVjdFNlcnZpY2UudmFsdWUoKSAmJiB0aGlzLl9zZWxlY3RTZXJ2aWNlLnZhbHVlKCkubGVuZ3RoID4gMCkge1xuXHRcdFx0cmV0dXJuIGAke3RoaXMuX3NlbGVjdFNlcnZpY2UubGFiZWxJZCgpfSAke3RoaXMuX3NlbGVjdFNlcnZpY2UuaWQoKX0tLXZhbHVlYDtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuX3NlbGVjdFNlcnZpY2UubGFiZWxJZCgpO1xuXHR9KTtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRpZiAoIXRoaXMuX3NlbGVjdFNlcnZpY2UpIHJldHVybjtcblx0XHR0aGlzLl9zZWxlY3RTZXJ2aWNlLl9zZXRTZWxlY3RUcmlnZ2VyKHRoaXMpO1xuXHR9XG5cblx0bmdBZnRlclZpZXdJbml0KCkge1xuXHRcdHRoaXMuX3NlbGVjdFNlcnZpY2Uuc2V0VHJpZ2dlcldpZHRoKHRoaXMuZWwubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aCk7XG5cdH1cblxuXHRwdWJsaWMgZm9jdXMoKSB7XG5cdFx0dGhpcy5lbC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG5cdH1cbn1cbiJdfQ==