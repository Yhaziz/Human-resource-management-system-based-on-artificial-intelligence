import { ChangeDetectionStrategy, Component, Input, computed, inject } from '@angular/core';
import { BrnSelectService } from './brn-select.service';
import * as i0 from "@angular/core";
export class BrnSelectValueComponent {
    constructor() {
        this._selectService = inject(BrnSelectService);
        this.id = computed(() => `${this._selectService.id()}--value`);
        this.placeholder = computed(() => this._selectService.placeholder());
        this.value = computed(() => {
            const value = this._selectService.selectedOptions();
            if (value.length === 0) {
                return null;
            }
            const selectedLabels = value.map((selectedOption) => selectedOption?.getLabel());
            if (this._selectService.dir() === 'rtl') {
                selectedLabels.reverse();
            }
            return this.transformFn(selectedLabels);
        });
        this.transformFn = (values) => (values ?? []).join(', ');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSelectValueComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnSelectValueComponent, isStandalone: true, selector: "brn-select-value, hlm-select-value", inputs: { transformFn: "transformFn" }, host: { properties: { "id": "id()" } }, ngImport: i0, template: `
		{{ value() || placeholder() }}
	`, isInline: true, styles: [":host{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;white-space:nowrap;pointer-events:none}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSelectValueComponent, decorators: [{
            type: Component,
            args: [{ selector: 'brn-select-value, hlm-select-value', template: `
		{{ value() || placeholder() }}
	`, host: {
                        '[id]': 'id()',
                    }, standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;white-space:nowrap;pointer-events:none}\n"] }]
        }], propDecorators: { 
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        transformFn: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLXNlbGVjdC12YWx1ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL3NlbGVjdC9icmFpbi9zcmMvbGliL2Jybi1zZWxlY3QtdmFsdWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBd0J4RCxNQUFNLE9BQU8sdUJBQXVCO0lBdEJwQztRQXVCa0IsbUJBQWMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUUzQyxPQUFFLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDMUQsZ0JBQVcsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ2hFLFVBQUssR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ3JDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDcEQsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSxDQUFDO2dCQUN4QixPQUFPLElBQUksQ0FBQztZQUNiLENBQUM7WUFDRCxNQUFNLGNBQWMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUVqRixJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssS0FBSyxFQUFFLENBQUM7Z0JBQ3pDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUMxQixDQUFDO1lBRUQsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3pDLENBQUMsQ0FBQyxDQUFDO1FBSUgsZ0JBQVcsR0FBNEMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM3Rjs4R0F0QlksdUJBQXVCO2tHQUF2Qix1QkFBdUIsOEtBcEJ6Qjs7RUFFVDs7MkZBa0JXLHVCQUF1QjtrQkF0Qm5DLFNBQVM7K0JBQ0Msb0NBQW9DLFlBQ3BDOztFQUVULFFBQ0s7d0JBQ0wsTUFBTSxFQUFFLE1BQU07cUJBQ2QsY0FZVyxJQUFJLG1CQUNDLHVCQUF1QixDQUFDLE1BQU07O1FBc0IvQyw4REFBOEQ7UUFDOUQsV0FBVztzQkFGVixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIGNvbXB1dGVkLCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJyblNlbGVjdFNlcnZpY2UgfSBmcm9tICcuL2Jybi1zZWxlY3Quc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2Jybi1zZWxlY3QtdmFsdWUsIGhsbS1zZWxlY3QtdmFsdWUnLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdHt7IHZhbHVlKCkgfHwgcGxhY2Vob2xkZXIoKSB9fVxuXHRgLFxuXHRob3N0OiB7XG5cdFx0J1tpZF0nOiAnaWQoKScsXG5cdH0sXG5cdHN0eWxlczogW1xuXHRcdGBcblx0XHRcdDpob3N0IHtcblx0XHRcdFx0ZGlzcGxheTogLXdlYmtpdC1ib3g7XG5cdFx0XHRcdC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG5cdFx0XHRcdC13ZWJraXQtbGluZS1jbGFtcDogMTtcblx0XHRcdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblx0XHRcdFx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdFx0XHR9XG5cdFx0YCxcblx0XSxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEJyblNlbGVjdFZhbHVlQ29tcG9uZW50IHtcblx0cHJpdmF0ZSByZWFkb25seSBfc2VsZWN0U2VydmljZSA9IGluamVjdChCcm5TZWxlY3RTZXJ2aWNlKTtcblxuXHRwdWJsaWMgcmVhZG9ubHkgaWQgPSBjb21wdXRlZCgoKSA9PiBgJHt0aGlzLl9zZWxlY3RTZXJ2aWNlLmlkKCl9LS12YWx1ZWApO1xuXHRwdWJsaWMgcmVhZG9ubHkgcGxhY2Vob2xkZXIgPSBjb21wdXRlZCgoKSA9PiB0aGlzLl9zZWxlY3RTZXJ2aWNlLnBsYWNlaG9sZGVyKCkpO1xuXHRwdWJsaWMgcmVhZG9ubHkgdmFsdWUgPSBjb21wdXRlZCgoKSA9PiB7XG5cdFx0Y29uc3QgdmFsdWUgPSB0aGlzLl9zZWxlY3RTZXJ2aWNlLnNlbGVjdGVkT3B0aW9ucygpO1xuXHRcdGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblx0XHRjb25zdCBzZWxlY3RlZExhYmVscyA9IHZhbHVlLm1hcCgoc2VsZWN0ZWRPcHRpb24pID0+IHNlbGVjdGVkT3B0aW9uPy5nZXRMYWJlbCgpKTtcblxuXHRcdGlmICh0aGlzLl9zZWxlY3RTZXJ2aWNlLmRpcigpID09PSAncnRsJykge1xuXHRcdFx0c2VsZWN0ZWRMYWJlbHMucmV2ZXJzZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnRyYW5zZm9ybUZuKHNlbGVjdGVkTGFiZWxzKTtcblx0fSk7XG5cblx0QElucHV0KClcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcblx0dHJhbnNmb3JtRm46ICh2YWx1ZXM6IChzdHJpbmcgfCB1bmRlZmluZWQpW10pID0+IGFueSA9ICh2YWx1ZXMpID0+ICh2YWx1ZXMgPz8gW10pLmpvaW4oJywgJyk7XG59XG4iXX0=