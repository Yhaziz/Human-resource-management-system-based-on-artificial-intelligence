import { ElementRef, type AfterViewInit, type QueryList } from '@angular/core';
import { BrnSelectOptionDirective } from './brn-select-option.directive';
import { BrnSelectScrollDownDirective } from './brn-select-scroll-down.directive';
import { BrnSelectScrollUpDirective } from './brn-select-scroll-up.directive';
import { BrnSelectService } from './brn-select.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/listbox";
export declare class BrnSelectContentComponent implements AfterViewInit {
    private readonly _el;
    private readonly _cdkListbox;
    private readonly destroyRef;
    protected readonly _selectService: BrnSelectService;
    protected readonly labelledBy: import("@angular/core").Signal<string>;
    protected readonly id: import("@angular/core").Signal<string>;
    protected readonly canScrollUp: import("@angular/core").WritableSignal<boolean>;
    protected readonly canScrollDown: import("@angular/core").WritableSignal<boolean>;
    protected initialSelectedOptions$: import("rxjs").Observable<(import("@angular/cdk/listbox").CdkOption<unknown> | null)[]>;
    protected viewport: ElementRef<HTMLElement>;
    protected scrollUpBtn: BrnSelectScrollUpDirective;
    protected scrollDownBtn: BrnSelectScrollDownDirective;
    protected _options: QueryList<BrnSelectOptionDirective>;
    constructor();
    ngAfterViewInit(): void;
    private setInitiallySelectedOptions;
    updateArrowDisplay(): void;
    handleScroll(): void;
    focusList(): void;
    moveFocusUp(): void;
    moveFocusDown(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnSelectContentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BrnSelectContentComponent, "brn-select-content, hlm-select-content:not(noHlm)", never, {}, {}, ["scrollUpBtn", "scrollDownBtn", "_options"], ["hlm-select-scroll-up", "brnSelectScrollUp", "*", "brnSelectScrollDown", "hlm-select-scroll-down"], true, [{ directive: typeof i1.CdkListbox; inputs: {}; outputs: {}; }]>;
}
