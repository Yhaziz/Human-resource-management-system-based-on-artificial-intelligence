import type { CdkOption, ListboxValueChangeEvent } from '@angular/cdk/listbox';
import { Subject } from 'rxjs';
import type { BrnSelectTriggerDirective } from './brn-select-trigger.directive';
import * as i0 from "@angular/core";
type BrnReadDirection = 'ltr' | 'rtl';
export declare class BrnSelectService {
    readonly state: import("@angular/core").WritableSignal<{
        id: string;
        labelId: string;
        panelId: string;
        placeholder: string;
        isExpanded: boolean;
        multiple: boolean;
        disabled: boolean;
        dir: BrnReadDirection;
        selectedOptions: Array<CdkOption | null>;
        initialSelectedOptions: Array<CdkOption | null>;
        value: string | string[];
        triggerWidth: number;
    }>;
    readonly id: import("@angular/core").Signal<string>;
    readonly labelId: import("@angular/core").Signal<string>;
    readonly panelId: import("@angular/core").Signal<string>;
    readonly placeholder: import("@angular/core").Signal<string>;
    readonly disabled: import("@angular/core").Signal<boolean>;
    readonly isExpanded: import("@angular/core").Signal<boolean>;
    readonly multiple: import("@angular/core").Signal<boolean>;
    readonly dir: import("@angular/core").Signal<BrnReadDirection>;
    readonly selectedOptions: import("@angular/core").Signal<(CdkOption<unknown> | null)[]>;
    readonly initialSelectedOptions: import("@angular/core").Signal<(CdkOption<unknown> | null)[]>;
    readonly value: import("@angular/core").Signal<string | string[]>;
    readonly triggerWidth: import("@angular/core").Signal<number>;
    readonly possibleOptions: import("@angular/core").Signal<(CdkOption<unknown> | null)[]>;
    private readonly _possibleOptions;
    private readonly multiple$;
    readonly listBoxValueChangeEvent$: Subject<ListboxValueChangeEvent<unknown>>;
    private _selectTrigger?;
    get selectTrigger(): BrnSelectTriggerDirective | undefined;
    constructor();
    setTriggerWidth(triggerWidth: number): void;
    getUpdatedOptions(latestListboxChange: ListboxValueChangeEvent<unknown>): Array<CdkOption | null>;
    deselectAllOptions(): void;
    _setSelectTrigger(trigger: BrnSelectTriggerDirective): void;
    registerOption(option: CdkOption | null): void;
    deregisterOption(option: CdkOption | null): void;
    setInitialSelectedOptions(value: unknown): void;
    private selectOptionByValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnSelectService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BrnSelectService>;
}
export {};
