import * as i0 from '@angular/core';
import { Directive, signal, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, inject, NgModule } from '@angular/core';
import { BrnDialogCloseDirective, BrnDialogComponent, BrnDialogContentDirective, BrnDialogDescriptionDirective, BrnDialogOverlayComponent, BrnDialogTitleDirective, BrnDialogTriggerDirective } from '@spartan-ng/ui-dialog-brain';
import { provideExposesStateProviderExisting, provideExposedSideProviderExisting, provideCustomClassSettableExisting } from '@spartan-ng/ui-core';

class BrnSheetCloseDirective extends BrnDialogCloseDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetCloseDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetCloseDirective, isStandalone: true, selector: "button[brnSheetClose]", usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetCloseDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnSheetClose]',
                    standalone: true,
                }]
        }] });

class BrnSheetComponent extends BrnDialogComponent {
    constructor() {
        super(...arguments);
        this._side = signal('top');
        this.side = this._side.asReadonly();
    }
    /* eslint-disable-next-line @angular-eslint/no-input-rename */
    set setSide(side) {
        this._side.set(side);
        if (side === 'top') {
            this.positionStrategy = this.positionBuilder.global().top();
        }
        if (side === 'bottom') {
            this.positionStrategy = this.positionBuilder.global().bottom();
        }
        if (side === 'left') {
            this.positionStrategy = this.positionBuilder.global().left();
        }
        if (side === 'right') {
            this.positionStrategy = this.positionBuilder.global().right();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetComponent, isStandalone: true, selector: "brn-sheet", inputs: { setSide: ["side", "setSide"] }, providers: [
            {
                provide: BrnDialogComponent,
                useExisting: forwardRef(() => BrnSheetComponent),
            },
        ], exportAs: ["brnSheet"], usesInheritance: true, ngImport: i0, template: `
		<ng-content />
	`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-sheet',
                    standalone: true,
                    template: `
		<ng-content />
	`,
                    providers: [
                        {
                            provide: BrnDialogComponent,
                            useExisting: forwardRef(() => BrnSheetComponent),
                        },
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    exportAs: 'brnSheet',
                }]
        }], propDecorators: { setSide: [{
                type: Input,
                args: ['side']
            }] } });

class BrnSheetContentDirective extends BrnDialogContentDirective {
    constructor() {
        super(...arguments);
        this.side = inject(BrnSheetComponent).side;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetContentDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetContentDirective, isStandalone: true, selector: "[brnSheetContent]", providers: [
            provideExposesStateProviderExisting(() => BrnSheetContentDirective),
            provideExposedSideProviderExisting(() => BrnSheetContentDirective),
        ], usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSheetContent]',
                    standalone: true,
                    providers: [
                        provideExposesStateProviderExisting(() => BrnSheetContentDirective),
                        provideExposedSideProviderExisting(() => BrnSheetContentDirective),
                    ],
                }]
        }] });

class BrnSheetDescriptionDirective extends BrnDialogDescriptionDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetDescriptionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetDescriptionDirective, isStandalone: true, selector: "[brnSheetDescription]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetDescriptionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSheetDescription]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnSheetOverlayComponent extends BrnDialogOverlayComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetOverlayComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetOverlayComponent, isStandalone: true, selector: "brn-sheet-overlay", providers: [provideCustomClassSettableExisting(() => BrnSheetOverlayComponent)], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetOverlayComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-sheet-overlay',
                    standalone: true,
                    providers: [provideCustomClassSettableExisting(() => BrnSheetOverlayComponent)],
                    template: ``,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }] });

class BrnSheetTitleDirective extends BrnDialogTitleDirective {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetTitleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetTitleDirective, isStandalone: true, selector: "[brnSheetTitle]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetTitleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSheetTitle]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnSheetTriggerDirective extends BrnDialogTriggerDirective {
    constructor() {
        super(...arguments);
        this._sheet = inject(BrnSheetComponent, { optional: true });
    }
    open() {
        if (this._sheet && this.side) {
            this._sheet.setSide = this.side;
        }
        super.open();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetTriggerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.5", type: BrnSheetTriggerDirective, isStandalone: true, selector: "button[brnSheetTrigger]", inputs: { side: "side" }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnSheetTrigger]',
                    standalone: true,
                }]
        }], propDecorators: { side: [{
                type: Input
            }] } });

const BrnSheetImports = [
    BrnSheetComponent,
    BrnSheetOverlayComponent,
    BrnSheetTriggerDirective,
    BrnSheetCloseDirective,
    BrnSheetContentDirective,
    BrnSheetTitleDirective,
    BrnSheetDescriptionDirective,
];
class BrnSheetModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetModule, imports: [BrnSheetComponent,
            BrnSheetOverlayComponent,
            BrnSheetTriggerDirective,
            BrnSheetCloseDirective,
            BrnSheetContentDirective,
            BrnSheetTitleDirective,
            BrnSheetDescriptionDirective], exports: [BrnSheetComponent,
            BrnSheetOverlayComponent,
            BrnSheetTriggerDirective,
            BrnSheetCloseDirective,
            BrnSheetContentDirective,
            BrnSheetTitleDirective,
            BrnSheetDescriptionDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnSheetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...BrnSheetImports],
                    exports: [...BrnSheetImports],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { BrnSheetCloseDirective, BrnSheetComponent, BrnSheetContentDirective, BrnSheetDescriptionDirective, BrnSheetImports, BrnSheetModule, BrnSheetOverlayComponent, BrnSheetTitleDirective, BrnSheetTriggerDirective };
//# sourceMappingURL=spartan-ng-ui-sheet-brain.mjs.map
