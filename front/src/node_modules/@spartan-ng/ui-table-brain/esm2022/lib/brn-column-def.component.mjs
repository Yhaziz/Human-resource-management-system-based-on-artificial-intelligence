import { CdkColumnDef, CdkTableModule, } from '@angular/cdk/table';
import { ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewEncapsulation, input, } from '@angular/core';
import { BrnCellDefDirective } from './brn-cell-def.directive';
import { BrnFooterDefDirective } from './brn-footer-def.directive';
import { BrnHeaderDefDirective } from './brn-header-def.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/table";
export class BrnColumnDefComponent {
    constructor() {
        this._name = '';
        this.class = input('');
    }
    get columnDef() {
        return this._columnDef;
    }
    get cell() {
        return this._columnDef.cell;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
        if (!this._columnDef)
            return;
        this._columnDef.name = value;
    }
    ngAfterContentChecked() {
        this._columnDef.name = this.name;
        if (this._cellDef) {
            this._columnDef.cell = this._cellDef;
        }
        if (this._headerCellDef) {
            this._columnDef.headerCell = this._headerCellDef;
        }
        if (this._footerCellDef) {
            this._columnDef.footerCell = this._footerCellDef;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnColumnDefComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "17.3.5", type: BrnColumnDefComponent, isStandalone: true, selector: "brn-column-def", inputs: { name: { classPropertyName: "name", publicName: "name", isSignal: false, isRequired: false, transformFunction: null }, class: { classPropertyName: "class", publicName: "class", isSignal: true, isRequired: false, transformFunction: null } }, queries: [{ propertyName: "_cellDef", first: true, predicate: BrnCellDefDirective, descendants: true, static: true }, { propertyName: "_footerCellDef", first: true, predicate: BrnFooterDefDirective, descendants: true, static: true }, { propertyName: "_headerCellDef", first: true, predicate: BrnHeaderDefDirective, descendants: true, static: true }], viewQueries: [{ propertyName: "_columnDef", first: true, predicate: CdkColumnDef, descendants: true, static: true }], ngImport: i0, template: `
		<ng-container [cdkColumnDef]="name">
			<ng-content select="[brnHeaderDef]" />
			<ng-content select="[brnCellDef]" />
			<ng-content select="[brnFooterDef]" />
		</ng-container>
	`, isInline: true, dependencies: [{ kind: "ngmodule", type: CdkTableModule }, { kind: "directive", type: i1.CdkColumnDef, selector: "[cdkColumnDef]", inputs: ["cdkColumnDef", "sticky", "stickyEnd"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnColumnDefComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-column-def',
                    standalone: true,
                    imports: [CdkTableModule],
                    template: `
		<ng-container [cdkColumnDef]="name">
			<ng-content select="[brnHeaderDef]" />
			<ng-content select="[brnCellDef]" />
			<ng-content select="[brnFooterDef]" />
		</ng-container>
	`,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], propDecorators: { name: [{
                type: Input
            }], _columnDef: [{
                type: ViewChild,
                args: [CdkColumnDef, { static: true }]
            }], _cellDef: [{
                type: ContentChild,
                args: [BrnCellDefDirective, { static: true }]
            }], _footerCellDef: [{
                type: ContentChild,
                args: [BrnFooterDefDirective, { static: true }]
            }], _headerCellDef: [{
                type: ContentChild,
                args: [BrnHeaderDefDirective, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLWNvbHVtbi1kZWYuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS90YWJsZS9icmFpbi9zcmMvbGliL2Jybi1jb2x1bW4tZGVmLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ04sWUFBWSxFQUNaLGNBQWMsR0FJZCxNQUFNLG9CQUFvQixDQUFDO0FBQzVCLE9BQU8sRUFDTix1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsU0FBUyxFQUNULGlCQUFpQixFQUNqQixLQUFLLEdBRUwsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDbkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7OztBQWdCbkUsTUFBTSxPQUFPLHFCQUFxQjtJQWRsQztRQXVCUyxVQUFLLEdBQUcsRUFBRSxDQUFDO1FBWUgsVUFBSyxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztLQXdCbEM7SUE1Q0EsSUFBSSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDUCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO0lBQzdCLENBQUM7SUFHRCxJQUNJLElBQUk7UUFDUCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDbkIsQ0FBQztJQUVELElBQUksSUFBSSxDQUFDLEtBQWE7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVO1lBQUUsT0FBTztRQUM3QixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQWNNLHFCQUFxQjtRQUMzQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pDLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdEMsQ0FBQztRQUNELElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDbEQsQ0FBQztRQUNELElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDbEQsQ0FBQztJQUNGLENBQUM7OEdBNUNXLHFCQUFxQjtrR0FBckIscUJBQXFCLDBXQTBCbkIsbUJBQW1CLCtGQUVuQixxQkFBcUIsK0ZBRXJCLHFCQUFxQiwwR0FQeEIsWUFBWSw4REFqQ2I7Ozs7OztFQU1ULDJEQVBTLGNBQWM7OzJGQVdaLHFCQUFxQjtrQkFkakMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO29CQUN6QixRQUFRLEVBQUU7Ozs7OztFQU1UO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDckM7OEJBWUksSUFBSTtzQkFEUCxLQUFLO2dCQWNFLFVBQVU7c0JBRGpCLFNBQVM7dUJBQUMsWUFBWSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtnQkFJakMsUUFBUTtzQkFEZixZQUFZO3VCQUFDLG1CQUFtQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtnQkFHM0MsY0FBYztzQkFEckIsWUFBWTt1QkFBQyxxQkFBcUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBRzdDLGNBQWM7c0JBRHJCLFlBQVk7dUJBQUMscUJBQXFCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q2RrQ29sdW1uRGVmLFxuXHRDZGtUYWJsZU1vZHVsZSxcblx0dHlwZSBDZGtDZWxsRGVmLFxuXHR0eXBlIENka0Zvb3RlckNlbGxEZWYsXG5cdHR5cGUgQ2RrSGVhZGVyQ2VsbERlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY2RrL3RhYmxlJztcbmltcG9ydCB7XG5cdENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuXHRDb21wb25lbnQsXG5cdENvbnRlbnRDaGlsZCxcblx0SW5wdXQsXG5cdFZpZXdDaGlsZCxcblx0Vmlld0VuY2Fwc3VsYXRpb24sXG5cdGlucHV0LFxuXHR0eXBlIEFmdGVyQ29udGVudENoZWNrZWQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnJuQ2VsbERlZkRpcmVjdGl2ZSB9IGZyb20gJy4vYnJuLWNlbGwtZGVmLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCcm5Gb290ZXJEZWZEaXJlY3RpdmUgfSBmcm9tICcuL2Jybi1mb290ZXItZGVmLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCcm5IZWFkZXJEZWZEaXJlY3RpdmUgfSBmcm9tICcuL2Jybi1oZWFkZXItZGVmLmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2Jybi1jb2x1bW4tZGVmJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aW1wb3J0czogW0Nka1RhYmxlTW9kdWxlXSxcblx0dGVtcGxhdGU6IGBcblx0XHQ8bmctY29udGFpbmVyIFtjZGtDb2x1bW5EZWZdPVwibmFtZVwiPlxuXHRcdFx0PG5nLWNvbnRlbnQgc2VsZWN0PVwiW2JybkhlYWRlckRlZl1cIiAvPlxuXHRcdFx0PG5nLWNvbnRlbnQgc2VsZWN0PVwiW2JybkNlbGxEZWZdXCIgLz5cblx0XHRcdDxuZy1jb250ZW50IHNlbGVjdD1cIlticm5Gb290ZXJEZWZdXCIgLz5cblx0XHQ8L25nLWNvbnRhaW5lcj5cblx0YCxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIEJybkNvbHVtbkRlZkNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudENoZWNrZWQge1xuXHRnZXQgY29sdW1uRGVmKCkge1xuXHRcdHJldHVybiB0aGlzLl9jb2x1bW5EZWY7XG5cdH1cblxuXHRnZXQgY2VsbCgpIHtcblx0XHRyZXR1cm4gdGhpcy5fY29sdW1uRGVmLmNlbGw7XG5cdH1cblxuXHRwcml2YXRlIF9uYW1lID0gJyc7XG5cdEBJbnB1dCgpXG5cdGdldCBuYW1lKCk6IHN0cmluZyB7XG5cdFx0cmV0dXJuIHRoaXMuX25hbWU7XG5cdH1cblxuXHRzZXQgbmFtZSh2YWx1ZTogc3RyaW5nKSB7XG5cdFx0dGhpcy5fbmFtZSA9IHZhbHVlO1xuXHRcdGlmICghdGhpcy5fY29sdW1uRGVmKSByZXR1cm47XG5cdFx0dGhpcy5fY29sdW1uRGVmLm5hbWUgPSB2YWx1ZTtcblx0fVxuXG5cdHB1YmxpYyByZWFkb25seSBjbGFzcyA9IGlucHV0KCcnKTtcblxuXHRAVmlld0NoaWxkKENka0NvbHVtbkRlZiwgeyBzdGF0aWM6IHRydWUgfSlcblx0cHJpdmF0ZSBfY29sdW1uRGVmITogQ2RrQ29sdW1uRGVmO1xuXG5cdEBDb250ZW50Q2hpbGQoQnJuQ2VsbERlZkRpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcblx0cHJpdmF0ZSBfY2VsbERlZj86IENka0NlbGxEZWY7XG5cdEBDb250ZW50Q2hpbGQoQnJuRm9vdGVyRGVmRGlyZWN0aXZlLCB7IHN0YXRpYzogdHJ1ZSB9KVxuXHRwcml2YXRlIF9mb290ZXJDZWxsRGVmPzogQ2RrRm9vdGVyQ2VsbERlZjtcblx0QENvbnRlbnRDaGlsZChCcm5IZWFkZXJEZWZEaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pXG5cdHByaXZhdGUgX2hlYWRlckNlbGxEZWY/OiBDZGtIZWFkZXJDZWxsRGVmO1xuXG5cdHB1YmxpYyBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZCB7XG5cdFx0dGhpcy5fY29sdW1uRGVmLm5hbWUgPSB0aGlzLm5hbWU7XG5cdFx0aWYgKHRoaXMuX2NlbGxEZWYpIHtcblx0XHRcdHRoaXMuX2NvbHVtbkRlZi5jZWxsID0gdGhpcy5fY2VsbERlZjtcblx0XHR9XG5cdFx0aWYgKHRoaXMuX2hlYWRlckNlbGxEZWYpIHtcblx0XHRcdHRoaXMuX2NvbHVtbkRlZi5oZWFkZXJDZWxsID0gdGhpcy5faGVhZGVyQ2VsbERlZjtcblx0XHR9XG5cdFx0aWYgKHRoaXMuX2Zvb3RlckNlbGxEZWYpIHtcblx0XHRcdHRoaXMuX2NvbHVtbkRlZi5mb290ZXJDZWxsID0gdGhpcy5fZm9vdGVyQ2VsbERlZjtcblx0XHR9XG5cdH1cbn1cbiJdfQ==