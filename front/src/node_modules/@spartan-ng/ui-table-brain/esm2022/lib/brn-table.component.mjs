import { CdkRowDef, CdkTable, CdkTableModule } from '@angular/cdk/table';
import { ChangeDetectionStrategy, Component, ContentChildren, EventEmitter, Input, Output, ViewChild, ViewEncapsulation, booleanAttribute, } from '@angular/core';
import { provideTableClassesSettableExisting } from '@spartan-ng/ui-core';
import { BrnColumnDefComponent } from './brn-column-def.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/table";
export class BrnTableComponent {
    constructor() {
        // Cdk Table Inputs / Outputs
        this.dataSource = [];
        this.fixedLayout = false;
        this.multiTemplateDataRows = false;
        this.displayedColumns = [];
        this.contentChanged = new EventEmitter();
        // Brn Inputs / Outputs
        this.customTemplateDataRows = false;
        this.stickyHeader = false;
        this.tableClasses = '';
        this.headerRowClasses = '';
        this.bodyRowClasses = '';
    }
    get trackBy() {
        return this._trackBy;
    }
    set trackBy(value) {
        this._trackBy = value;
        if (this._cdkTable) {
            this._cdkTable.trackBy = this._trackBy;
        }
    }
    // after the <ng-content> has been initialized, the column definitions are available.
    // All that's left is to add them to the table ourselves:
    ngAfterContentInit() {
        this.columnDefComponents.forEach((component) => {
            if (!this._cdkTable)
                return;
            if (component.cell) {
                this._cdkTable.addColumnDef(component.columnDef);
            }
        });
        this.rowDefs.forEach((rowDef) => {
            if (!this._cdkTable)
                return;
            this._cdkTable.addRowDef(rowDef);
        });
    }
    setTableClasses({ table, headerRow, bodyRow, }) {
        if (table) {
            this.tableClasses = table;
        }
        if (headerRow) {
            this.headerRowClasses = headerRow;
        }
        if (bodyRow) {
            this.bodyRowClasses = bodyRow;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnTableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.5", type: BrnTableComponent, isStandalone: true, selector: "brn-table", inputs: { dataSource: "dataSource", fixedLayout: ["fixedLayout", "fixedLayout", booleanAttribute], multiTemplateDataRows: ["multiTemplateDataRows", "multiTemplateDataRows", booleanAttribute], displayedColumns: "displayedColumns", trackBy: "trackBy", customTemplateDataRows: ["customTemplateDataRows", "customTemplateDataRows", booleanAttribute], onRowClick: "onRowClick", stickyHeader: ["stickyHeader", "stickyHeader", booleanAttribute], tableClasses: "tableClasses", headerRowClasses: "headerRowClasses", bodyRowClasses: "bodyRowClasses" }, outputs: { contentChanged: "contentChanged" }, providers: [provideTableClassesSettableExisting(() => BrnTableComponent)], queries: [{ propertyName: "columnDefComponents", predicate: BrnColumnDefComponent }, { propertyName: "rowDefs", predicate: CdkRowDef }], viewQueries: [{ propertyName: "_cdkTable", first: true, predicate: ["cdkTable"], descendants: true, read: CdkTable, static: true }], ngImport: i0, template: `
		<cdk-table
			#cdkTable
			[class]="tableClasses"
			[dataSource]="dataSource"
			[fixedLayout]="fixedLayout"
			[multiTemplateDataRows]="multiTemplateDataRows"
			(contentChanged)="contentChanged.emit()"
		>
			<ng-content />

			<cdk-header-row [class]="headerRowClasses" *cdkHeaderRowDef="displayedColumns; sticky: stickyHeader" />
			@if (!customTemplateDataRows) {
				<cdk-row
					[tabindex]="!!onRowClick ? 0 : -1"
					[attr.role]="!!onRowClick ? 'button' : 'row'"
					[class.row-interactive]="!!onRowClick"
					(keydown.enter)="!!onRowClick && onRowClick(row)"
					(click)="!!onRowClick && onRowClick(row)"
					[class]="bodyRowClasses"
					*cdkRowDef="let row; columns: displayedColumns"
				/>
			}

			<ng-template cdkNoDataRow>
				<ng-content select="[brnNoDataRow]" />
			</ng-template>
		</cdk-table>
	`, isInline: true, dependencies: [{ kind: "ngmodule", type: CdkTableModule }, { kind: "component", type: i1.CdkTable, selector: "cdk-table, table[cdk-table]", inputs: ["trackBy", "dataSource", "multiTemplateDataRows", "fixedLayout"], outputs: ["contentChanged"], exportAs: ["cdkTable"] }, { kind: "directive", type: i1.CdkRowDef, selector: "[cdkRowDef]", inputs: ["cdkRowDefColumns", "cdkRowDefWhen"] }, { kind: "component", type: i1.CdkRow, selector: "cdk-row, tr[cdk-row]" }, { kind: "component", type: i1.CdkHeaderRow, selector: "cdk-header-row, tr[cdk-header-row]" }, { kind: "directive", type: i1.CdkHeaderRowDef, selector: "[cdkHeaderRowDef]", inputs: ["cdkHeaderRowDef", "cdkHeaderRowDefSticky"] }, { kind: "directive", type: i1.CdkNoDataRow, selector: "ng-template[cdkNoDataRow]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnTableComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-table',
                    standalone: true,
                    imports: [CdkTableModule],
                    providers: [provideTableClassesSettableExisting(() => BrnTableComponent)],
                    template: `
		<cdk-table
			#cdkTable
			[class]="tableClasses"
			[dataSource]="dataSource"
			[fixedLayout]="fixedLayout"
			[multiTemplateDataRows]="multiTemplateDataRows"
			(contentChanged)="contentChanged.emit()"
		>
			<ng-content />

			<cdk-header-row [class]="headerRowClasses" *cdkHeaderRowDef="displayedColumns; sticky: stickyHeader" />
			@if (!customTemplateDataRows) {
				<cdk-row
					[tabindex]="!!onRowClick ? 0 : -1"
					[attr.role]="!!onRowClick ? 'button' : 'row'"
					[class.row-interactive]="!!onRowClick"
					(keydown.enter)="!!onRowClick && onRowClick(row)"
					(click)="!!onRowClick && onRowClick(row)"
					[class]="bodyRowClasses"
					*cdkRowDef="let row; columns: displayedColumns"
				/>
			}

			<ng-template cdkNoDataRow>
				<ng-content select="[brnNoDataRow]" />
			</ng-template>
		</cdk-table>
	`,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], propDecorators: { _cdkTable: [{
                type: ViewChild,
                args: ['cdkTable', { read: CdkTable, static: true }]
            }], dataSource: [{
                type: Input
            }], fixedLayout: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], multiTemplateDataRows: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], displayedColumns: [{
                type: Input
            }], trackBy: [{
                type: Input
            }], contentChanged: [{
                type: Output
            }], customTemplateDataRows: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], onRowClick: [{
                type: Input
            }], stickyHeader: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], tableClasses: [{
                type: Input
            }], headerRowClasses: [{
                type: Input
            }], bodyRowClasses: [{
                type: Input
            }], columnDefComponents: [{
                type: ContentChildren,
                args: [BrnColumnDefComponent]
            }], rowDefs: [{
                type: ContentChildren,
                args: [CdkRowDef]
            }] } });
//# sourceMappingURL=data:application/json;base64,