{"version":3,"file":"spartan-ng-ui-table-brain.mjs","sources":["../../../../../../libs/ui/table/brain/src/lib/brn-cell-def.directive.ts","../../../../../../libs/ui/table/brain/src/lib/brn-footer-def.directive.ts","../../../../../../libs/ui/table/brain/src/lib/brn-header-def.directive.ts","../../../../../../libs/ui/table/brain/src/lib/brn-column-def.component.ts","../../../../../../libs/ui/table/brain/src/lib/brn-paginator.directive.ts","../../../../../../libs/ui/table/brain/src/lib/brn-table.component.ts","../../../../../../libs/ui/table/brain/src/lib/brn-column-manager.ts","../../../../../../libs/ui/table/brain/src/index.ts","../../../../../../libs/ui/table/brain/src/spartan-ng-ui-table-brain.ts"],"sourcesContent":["import { CdkCellDef } from '@angular/cdk/table';\n// biome-ignore lint/style/useImportType: <explanation>\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n\tstandalone: true,\n\tselector: '[brnCellDef]',\n\texportAs: 'brnCellDef',\n})\nexport class BrnCellDefDirective extends CdkCellDef {\n\tconstructor(public override template: TemplateRef<unknown>) {\n\t\tsuper(template);\n\t}\n}\n","import { CdkFooterCellDef } from '@angular/cdk/table';\n// biome-ignore lint/style/useImportType: <explanation>\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n\tstandalone: true,\n\tselector: '[brnFooterDef]',\n\texportAs: 'brnFooterDef',\n})\nexport class BrnFooterDefDirective extends CdkFooterCellDef {\n\tconstructor(public override template: TemplateRef<unknown>) {\n\t\tsuper(template);\n\t}\n}\n","import { CdkHeaderCellDef } from '@angular/cdk/table';\n// biome-ignore lint/style/useImportType: <explanation>\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n\tstandalone: true,\n\tselector: '[brnHeaderDef]',\n\texportAs: 'brnHeaderDef',\n})\nexport class BrnHeaderDefDirective extends CdkHeaderCellDef {\n\tconstructor(public override template: TemplateRef<unknown>) {\n\t\tsuper(template);\n\t}\n}\n","import {\n\tCdkColumnDef,\n\tCdkTableModule,\n\ttype CdkCellDef,\n\ttype CdkFooterCellDef,\n\ttype CdkHeaderCellDef,\n} from '@angular/cdk/table';\nimport {\n\tChangeDetectionStrategy,\n\tComponent,\n\tContentChild,\n\tInput,\n\tViewChild,\n\tViewEncapsulation,\n\tinput,\n\ttype AfterContentChecked,\n} from '@angular/core';\nimport { BrnCellDefDirective } from './brn-cell-def.directive';\nimport { BrnFooterDefDirective } from './brn-footer-def.directive';\nimport { BrnHeaderDefDirective } from './brn-header-def.directive';\n\n@Component({\n\tselector: 'brn-column-def',\n\tstandalone: true,\n\timports: [CdkTableModule],\n\ttemplate: `\n\t\t<ng-container [cdkColumnDef]=\"name\">\n\t\t\t<ng-content select=\"[brnHeaderDef]\" />\n\t\t\t<ng-content select=\"[brnCellDef]\" />\n\t\t\t<ng-content select=\"[brnFooterDef]\" />\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class BrnColumnDefComponent implements AfterContentChecked {\n\tget columnDef() {\n\t\treturn this._columnDef;\n\t}\n\n\tget cell() {\n\t\treturn this._columnDef.cell;\n\t}\n\n\tprivate _name = '';\n\t@Input()\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tset name(value: string) {\n\t\tthis._name = value;\n\t\tif (!this._columnDef) return;\n\t\tthis._columnDef.name = value;\n\t}\n\n\tpublic readonly class = input('');\n\n\t@ViewChild(CdkColumnDef, { static: true })\n\tprivate _columnDef!: CdkColumnDef;\n\n\t@ContentChild(BrnCellDefDirective, { static: true })\n\tprivate _cellDef?: CdkCellDef;\n\t@ContentChild(BrnFooterDefDirective, { static: true })\n\tprivate _footerCellDef?: CdkFooterCellDef;\n\t@ContentChild(BrnHeaderDefDirective, { static: true })\n\tprivate _headerCellDef?: CdkHeaderCellDef;\n\n\tpublic ngAfterContentChecked(): void {\n\t\tthis._columnDef.name = this.name;\n\t\tif (this._cellDef) {\n\t\t\tthis._columnDef.cell = this._cellDef;\n\t\t}\n\t\tif (this._headerCellDef) {\n\t\t\tthis._columnDef.headerCell = this._headerCellDef;\n\t\t}\n\t\tif (this._footerCellDef) {\n\t\t\tthis._columnDef.footerCell = this._footerCellDef;\n\t\t}\n\t}\n}\n","import {\n\tDirective,\n\tInput,\n\tTemplateRef,\n\tViewContainerRef,\n\tcomputed,\n\teffect,\n\tinject,\n\tnumberAttribute,\n\tsignal,\n\ttype OnInit,\n\ttype Signal,\n} from '@angular/core';\n\nexport type PaginatorState = {\n\tcurrentPage: number;\n\tstartIndex: number;\n\tendIndex: number;\n\tpageSize: number;\n\ttotalPages: number;\n\ttotalElements: number | null | undefined;\n};\n\nexport type PaginatorContext = {\n\t$implicit: {\n\t\tstate: Signal<PaginatorState>;\n\t\tincrementable: Signal<boolean>;\n\t\tdecrementable: Signal<boolean>;\n\t\tincrement: () => void;\n\t\tdecrement: () => void;\n\t};\n};\n\n@Directive({\n\tstandalone: true,\n\tselector: '[brnPaginator]',\n\texportAs: 'brnPaginator',\n})\nexport class BrnPaginatorDirective implements OnInit {\n\tstatic ngTemplateContextGuard(directive: BrnPaginatorDirective, context: unknown): context is PaginatorContext {\n\t\treturn true;\n\t}\n\n\tprivate readonly _vcr = inject(ViewContainerRef);\n\tprivate readonly _template = inject(TemplateRef<unknown>);\n\n\tprivate readonly _state = signal<PaginatorState>({\n\t\tcurrentPage: 0,\n\t\tstartIndex: 0,\n\t\tendIndex: 0,\n\t\tpageSize: 10,\n\t\ttotalPages: 0,\n\t\ttotalElements: null,\n\t});\n\tprivate readonly _decrementable = computed(() => 0 < this._state().startIndex);\n\tprivate readonly _incrementable = computed(() => this._state().endIndex < (this._state().totalElements ?? 0) - 1);\n\n\t@Input({ alias: 'brnPaginatorTotalElements' })\n\tset totalElements(value: number | null | undefined) {\n\t\tthis.calculateNewState({ newTotalElements: value, newPage: 0 });\n\t}\n\n\t@Input({ alias: 'brnPaginatorCurrentPage', transform: numberAttribute })\n\tset currentPage(value: number) {\n\t\tthis.calculateNewState({ newPage: value });\n\t}\n\n\t@Input({ alias: 'brnPaginatorPageSize', transform: numberAttribute })\n\tset pageSize(value: number) {\n\t\tthis.calculateNewState({ newPageSize: value, newPage: 0 });\n\t}\n\n\t@Input({ alias: 'brnPaginatorOnStateChange' })\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tpublic onStateChange?: (state: PaginatorState) => void;\n\n\tconstructor() {\n\t\teffect(\n\t\t\t() => {\n\t\t\t\tconst state = this._state();\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (this.onStateChange) {\n\t\t\t\t\t\tthis.onStateChange(state);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t{ allowSignalWrites: true },\n\t\t);\n\t}\n\n\tpublic ngOnInit() {\n\t\tthis._vcr.createEmbeddedView<PaginatorContext>(this._template, {\n\t\t\t$implicit: {\n\t\t\t\tstate: this._state,\n\t\t\t\tincrement: () => this.incrementPage(),\n\t\t\t\tdecrement: () => this.decrementPage(),\n\t\t\t\tincrementable: this._incrementable,\n\t\t\t\tdecrementable: this._decrementable,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic decrementPage(): void {\n\t\tconst { currentPage } = this._state();\n\t\tif (0 < currentPage) {\n\t\t\tthis.calculateNewState({ newPage: currentPage - 1 });\n\t\t}\n\t}\n\n\tpublic incrementPage(): void {\n\t\tconst { currentPage, totalPages } = this._state();\n\t\tif (totalPages > currentPage) {\n\t\t\tthis.calculateNewState({ newPage: currentPage + 1 });\n\t\t}\n\t}\n\n\tpublic reset(): void {\n\t\tthis.currentPage = 0;\n\t}\n\n\tprivate calculateNewState({\n\t\tnewPage,\n\t\tnewPageSize,\n\t\tnewTotalElements,\n\t}: Partial<{\n\t\tnewPage: number;\n\t\tnewPageSize: number;\n\t\tnewTotalElements: number | null | undefined;\n\t}>) {\n\t\tconst previousState = this._state();\n\n\t\tlet currentPage = newPage ?? previousState.currentPage;\n\t\tconst pageSize = newPageSize ?? previousState.pageSize;\n\t\tconst totalElements = newTotalElements ?? previousState.totalElements ?? 0;\n\n\t\tconst newTotalPages = totalElements ? Math.floor(totalElements / pageSize) : 0;\n\n\t\tif (newTotalPages < currentPage - 1) {\n\t\t\tcurrentPage = newTotalPages - 1;\n\t\t}\n\n\t\tconst newStartIndex = totalElements === 0 ? 0 : Math.min(totalElements - 1, currentPage * pageSize);\n\t\tconst newEndIndex = Math.min((currentPage + 1) * pageSize - 1, totalElements - 1);\n\n\t\tconst newState = {\n\t\t\tcurrentPage: currentPage,\n\t\t\tstartIndex: newStartIndex,\n\t\t\tendIndex: newEndIndex,\n\t\t\tpageSize: pageSize,\n\t\t\ttotalPages: newTotalPages,\n\t\t\ttotalElements: totalElements,\n\t\t};\n\n\t\tthis._state.set(newState);\n\t}\n}\n","import { CdkRowDef, CdkTable, CdkTableModule, type CdkTableDataSourceInput } from '@angular/cdk/table';\nimport {\n\tChangeDetectionStrategy,\n\tComponent,\n\tContentChildren,\n\tEventEmitter,\n\tInput,\n\tOutput,\n\tViewChild,\n\tViewEncapsulation,\n\tbooleanAttribute,\n\ttype AfterContentInit,\n\ttype QueryList,\n\ttype TrackByFunction,\n} from '@angular/core';\nimport { provideTableClassesSettableExisting, type TableClassesSettable } from '@spartan-ng/ui-core';\nimport { BrnColumnDefComponent } from './brn-column-def.component';\n\nexport type BrnTableDataSourceInput<T> = CdkTableDataSourceInput<T>;\n\n@Component({\n\tselector: 'brn-table',\n\tstandalone: true,\n\timports: [CdkTableModule],\n\tproviders: [provideTableClassesSettableExisting(<T>() => BrnTableComponent<T>)],\n\ttemplate: `\n\t\t<cdk-table\n\t\t\t#cdkTable\n\t\t\t[class]=\"tableClasses\"\n\t\t\t[dataSource]=\"dataSource\"\n\t\t\t[fixedLayout]=\"fixedLayout\"\n\t\t\t[multiTemplateDataRows]=\"multiTemplateDataRows\"\n\t\t\t(contentChanged)=\"contentChanged.emit()\"\n\t\t>\n\t\t\t<ng-content />\n\n\t\t\t<cdk-header-row [class]=\"headerRowClasses\" *cdkHeaderRowDef=\"displayedColumns; sticky: stickyHeader\" />\n\t\t\t@if (!customTemplateDataRows) {\n\t\t\t\t<cdk-row\n\t\t\t\t\t[tabindex]=\"!!onRowClick ? 0 : -1\"\n\t\t\t\t\t[attr.role]=\"!!onRowClick ? 'button' : 'row'\"\n\t\t\t\t\t[class.row-interactive]=\"!!onRowClick\"\n\t\t\t\t\t(keydown.enter)=\"!!onRowClick && onRowClick(row)\"\n\t\t\t\t\t(click)=\"!!onRowClick && onRowClick(row)\"\n\t\t\t\t\t[class]=\"bodyRowClasses\"\n\t\t\t\t\t*cdkRowDef=\"let row; columns: displayedColumns\"\n\t\t\t\t/>\n\t\t\t}\n\n\t\t\t<ng-template cdkNoDataRow>\n\t\t\t\t<ng-content select=\"[brnNoDataRow]\" />\n\t\t\t</ng-template>\n\t\t</cdk-table>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class BrnTableComponent<T> implements TableClassesSettable, AfterContentInit {\n\t@ViewChild('cdkTable', { read: CdkTable, static: true })\n\tprivate _cdkTable?: CdkTable<T>;\n\t// Cdk Table Inputs / Outputs\n\t@Input()\n\tpublic dataSource: BrnTableDataSourceInput<T> = [];\n\t@Input({ transform: booleanAttribute })\n\tpublic fixedLayout = false;\n\t@Input({ transform: booleanAttribute })\n\tpublic multiTemplateDataRows = false;\n\t@Input()\n\tpublic displayedColumns: string[] = [];\n\n\tprivate _trackBy?: TrackByFunction<T>;\n\tget trackBy(): TrackByFunction<T> | undefined {\n\t\treturn this._trackBy;\n\t}\n\n\t@Input()\n\tset trackBy(value: TrackByFunction<T>) {\n\t\tthis._trackBy = value;\n\t\tif (this._cdkTable) {\n\t\t\tthis._cdkTable.trackBy = this._trackBy;\n\t\t}\n\t}\n\n\t@Output()\n\tpublic readonly contentChanged: EventEmitter<void> = new EventEmitter<void>();\n\n\t// Brn Inputs / Outputs\n\t@Input({ transform: booleanAttribute })\n\tpublic customTemplateDataRows = false;\n\t@Input()\n\tpublic onRowClick: ((element: T) => void) | undefined;\n\n\t@Input({ transform: booleanAttribute })\n\tpublic stickyHeader = false;\n\t@Input()\n\tpublic tableClasses = '';\n\t@Input()\n\tpublic headerRowClasses = '';\n\t@Input()\n\tpublic bodyRowClasses = '';\n\n\t@ContentChildren(BrnColumnDefComponent) columnDefComponents!: QueryList<BrnColumnDefComponent>;\n\t@ContentChildren(CdkRowDef) rowDefs!: QueryList<CdkRowDef<T>>;\n\n\t// after the <ng-content> has been initialized, the column definitions are available.\n\t// All that's left is to add them to the table ourselves:\n\tpublic ngAfterContentInit(): void {\n\t\tthis.columnDefComponents.forEach((component) => {\n\t\t\tif (!this._cdkTable) return;\n\t\t\tif (component.cell) {\n\t\t\t\tthis._cdkTable.addColumnDef(component.columnDef);\n\t\t\t}\n\t\t});\n\t\tthis.rowDefs.forEach((rowDef) => {\n\t\t\tif (!this._cdkTable) return;\n\t\t\tthis._cdkTable.addRowDef(rowDef);\n\t\t});\n\t}\n\n\tpublic setTableClasses({\n\t\ttable,\n\t\theaderRow,\n\t\tbodyRow,\n\t}: Partial<{ table: string; headerRow: string; bodyRow: string }>): void {\n\t\tif (table) {\n\t\t\tthis.tableClasses = table;\n\t\t}\n\t\tif (headerRow) {\n\t\t\tthis.headerRowClasses = headerRow;\n\t\t}\n\t\tif (bodyRow) {\n\t\t\tthis.bodyRowClasses = bodyRow;\n\t\t}\n\t}\n}\n","import { computed, signal, type Signal } from '@angular/core';\n\ntype BrnColumnVisibility = Record<string, boolean> | Record<string, { visible: boolean }>;\n\ntype AllColumnsPropertyType<T> = T extends Record<string, boolean>\n\t? keyof T[]\n\t: T extends Record<string, infer R>\n\t\t? (R extends { visible: boolean } ? { name: keyof T } & R : never)[]\n\t\t: never;\n\nexport class BrnColumnManager<T extends BrnColumnVisibility> {\n\tprivate readonly _initialColumnVisibility: T;\n\tprivate readonly _columnVisibility;\n\n\tpublic readonly allColumns: AllColumnsPropertyType<T>;\n\tpublic readonly columnVisibility;\n\tpublic readonly displayedColumns: Signal<(keyof T)[]> = computed(() => {\n\t\treturn Object.entries(this._columnVisibility())\n\t\t\t.filter(([, value]) => (typeof value === 'boolean' ? value : value.visible))\n\t\t\t.map(([key]) => key);\n\t});\n\n\tconstructor(initialColumnVisibility: T) {\n\t\tthis._initialColumnVisibility = initialColumnVisibility;\n\t\tthis._columnVisibility = signal(this._initialColumnVisibility);\n\t\tthis._columnVisibility.set(this._initialColumnVisibility);\n\t\tthis.columnVisibility = this._columnVisibility.asReadonly();\n\t\tthis.allColumns = this.createAllColumns(this._initialColumnVisibility);\n\t}\n\n\tpublic readonly isColumnVisible = (columnName: string) => {\n\t\tconst visibilityMap = this.columnVisibility();\n\t\tconst columnEntry = visibilityMap[columnName];\n\t\treturn typeof columnEntry === 'boolean' ? columnEntry : columnEntry.visible;\n\t};\n\tpublic readonly isColumnDisabled = (columnName: string) =>\n\t\tthis.isColumnVisible(columnName) && this.displayedColumns().length === 1;\n\n\tpublic toggleVisibility(columnName: keyof T) {\n\t\tconst visibilityMap = this._columnVisibility();\n\t\tconst columnEntry = visibilityMap[columnName];\n\t\tconst newVisibilityState = typeof columnEntry === 'boolean' ? !columnEntry : { visible: !columnEntry.visible };\n\t\tthis._columnVisibility.set({ ...visibilityMap, [columnName]: newVisibilityState });\n\t}\n\tpublic setVisible(columnName: keyof T) {\n\t\tconst visibilityMap = this._columnVisibility();\n\t\tconst columnEntry = visibilityMap[columnName];\n\t\tconst newVisibilityState = typeof columnEntry === 'boolean' ? true : { visible: true };\n\t\tthis._columnVisibility.set({ ...visibilityMap, [columnName]: newVisibilityState });\n\t}\n\tpublic setInvisible(columnName: keyof T) {\n\t\tconst visibilityMap = this._columnVisibility();\n\t\tconst columnEntry = visibilityMap[columnName];\n\t\tconst newVisibilityState = typeof columnEntry === 'boolean' ? false : { visible: false };\n\t\tthis._columnVisibility.set({ ...visibilityMap, [columnName]: newVisibilityState });\n\t}\n\n\tprivate createAllColumns(initialColumnVisibility: T): AllColumnsPropertyType<T> {\n\t\tconst keys = Object.keys(initialColumnVisibility) as (keyof T)[];\n\t\tif (this.isBooleanConfig(initialColumnVisibility)) {\n\t\t\treturn keys as unknown as AllColumnsPropertyType<T>;\n\t\t} else {\n\t\t\treturn keys.map((key) => {\n\t\t\t\tconst values = initialColumnVisibility[key] as { visible: boolean };\n\t\t\t\treturn {\n\t\t\t\t\tname: key,\n\t\t\t\t\t...values,\n\t\t\t\t};\n\t\t\t}) as AllColumnsPropertyType<T>;\n\t\t}\n\t}\n\n\tprivate isBooleanConfig(config: any): config is Record<string, boolean> {\n\t\treturn typeof Object.values(config)[0] === 'boolean';\n\t}\n}\n\nexport const useBrnColumnManager = <T extends BrnColumnVisibility>(initialColumnVisibility: T) =>\n\tnew BrnColumnManager(initialColumnVisibility);\n","import { NgModule } from '@angular/core';\nimport { BrnCellDefDirective } from './lib/brn-cell-def.directive';\nimport { BrnColumnDefComponent } from './lib/brn-column-def.component';\nimport { BrnFooterDefDirective } from './lib/brn-footer-def.directive';\nimport { BrnHeaderDefDirective } from './lib/brn-header-def.directive';\nimport { BrnPaginatorDirective } from './lib/brn-paginator.directive';\nimport { BrnTableComponent } from './lib/brn-table.component';\n\nexport { BrnCellDefDirective } from './lib/brn-cell-def.directive';\nexport { BrnColumnDefComponent } from './lib/brn-column-def.component';\nexport { BrnColumnManager, useBrnColumnManager } from './lib/brn-column-manager';\nexport { BrnFooterDefDirective } from './lib/brn-footer-def.directive';\nexport { BrnHeaderDefDirective } from './lib/brn-header-def.directive';\nexport { BrnPaginatorDirective, PaginatorContext, PaginatorState } from './lib/brn-paginator.directive';\nexport { BrnTableComponent } from './lib/brn-table.component';\n\nexport const BrnTableImports = [\n\tBrnCellDefDirective,\n\tBrnColumnDefComponent,\n\tBrnFooterDefDirective,\n\tBrnHeaderDefDirective,\n\tBrnTableComponent,\n\tBrnPaginatorDirective,\n] as const;\n\n@NgModule({\n\timports: [...BrnTableImports],\n\texports: [...BrnTableImports],\n})\nexport class BrnTableModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}