import { Directive, ElementRef, computed, effect, inject, input } from '@angular/core';
import { BrnTabsDirective } from './brn-tabs.directive';
import * as i0 from "@angular/core";
export class BrnTabsContentDirective {
    constructor() {
        this._root = inject(BrnTabsDirective);
        this._elementRef = inject(ElementRef);
        this.contentFor = input.required({ alias: 'brnTabsContent' });
        this._isSelected = computed(() => this._root.$value() === this.contentFor());
        this.contentId = computed(() => 'brn-tabs-content-' + this.contentFor());
        this.labelId = computed(() => 'brn-tabs-label-' + this.contentFor());
        effect(() => {
            this._root.registerContent(this.contentFor(), this);
        });
    }
    focus() {
        this._elementRef.nativeElement.focus();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnTabsContentDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "17.3.5", type: BrnTabsContentDirective, isStandalone: true, selector: "[brnTabsContent]", inputs: { contentFor: { classPropertyName: "contentFor", publicName: "brnTabsContent", isSignal: true, isRequired: true, transformFunction: null } }, host: { attributes: { "role": "tabpanel", "tabindex": "0" }, properties: { "id": "contentId()", "attr.aria-labelledby": "labelId()", "hidden": "_isSelected() === false" } }, exportAs: ["brnTabsContent"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.5", ngImport: i0, type: BrnTabsContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnTabsContent]',
                    standalone: true,
                    host: {
                        role: 'tabpanel',
                        tabindex: '0',
                        '[id]': 'contentId()',
                        '[attr.aria-labelledby]': 'labelId()',
                        '[hidden]': '_isSelected() === false',
                    },
                    exportAs: 'brnTabsContent',
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJuLXRhYnMtY29udGVudC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpL3RhYnMvYnJhaW4vc3JjL2xpYi9icm4tdGFicy1jb250ZW50LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBY3hELE1BQU0sT0FBTyx1QkFBdUI7SUFTbkM7UUFSUSxVQUFLLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDakMsZ0JBQVcsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFekIsZUFBVSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQVMsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQzlELGdCQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7UUFDakYsY0FBUyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztRQUNwRSxZQUFPLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1FBR3pFLE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDWCxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckQsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSztRQUNYLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3hDLENBQUM7OEdBakJXLHVCQUF1QjtrR0FBdkIsdUJBQXVCOzsyRkFBdkIsdUJBQXVCO2tCQVpuQyxTQUFTO21CQUFDO29CQUNWLFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixJQUFJLEVBQUU7d0JBQ0wsSUFBSSxFQUFFLFVBQVU7d0JBQ2hCLFFBQVEsRUFBRSxHQUFHO3dCQUNiLE1BQU0sRUFBRSxhQUFhO3dCQUNyQix3QkFBd0IsRUFBRSxXQUFXO3dCQUNyQyxVQUFVLEVBQUUseUJBQXlCO3FCQUNyQztvQkFDRCxRQUFRLEVBQUUsZ0JBQWdCO2lCQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgY29tcHV0ZWQsIGVmZmVjdCwgaW5qZWN0LCBpbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnJuVGFic0RpcmVjdGl2ZSB9IGZyb20gJy4vYnJuLXRhYnMuZGlyZWN0aXZlJztcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2JyblRhYnNDb250ZW50XScsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGhvc3Q6IHtcblx0XHRyb2xlOiAndGFicGFuZWwnLFxuXHRcdHRhYmluZGV4OiAnMCcsXG5cdFx0J1tpZF0nOiAnY29udGVudElkKCknLFxuXHRcdCdbYXR0ci5hcmlhLWxhYmVsbGVkYnldJzogJ2xhYmVsSWQoKScsXG5cdFx0J1toaWRkZW5dJzogJ19pc1NlbGVjdGVkKCkgPT09IGZhbHNlJyxcblx0fSxcblx0ZXhwb3J0QXM6ICdicm5UYWJzQ29udGVudCcsXG59KVxuZXhwb3J0IGNsYXNzIEJyblRhYnNDb250ZW50RGlyZWN0aXZlIHtcblx0cHJpdmF0ZSBfcm9vdCA9IGluamVjdChCcm5UYWJzRGlyZWN0aXZlKTtcblx0cHJpdmF0ZSBfZWxlbWVudFJlZiA9IGluamVjdChFbGVtZW50UmVmKTtcblxuXHRwdWJsaWMgcmVhZG9ubHkgY29udGVudEZvciA9IGlucHV0LnJlcXVpcmVkPHN0cmluZz4oeyBhbGlhczogJ2JyblRhYnNDb250ZW50JyB9KTtcblx0cHJvdGVjdGVkIHJlYWRvbmx5IF9pc1NlbGVjdGVkID0gY29tcHV0ZWQoKCkgPT4gdGhpcy5fcm9vdC4kdmFsdWUoKSA9PT0gdGhpcy5jb250ZW50Rm9yKCkpO1xuXHRwcm90ZWN0ZWQgY29udGVudElkID0gY29tcHV0ZWQoKCkgPT4gJ2Jybi10YWJzLWNvbnRlbnQtJyArIHRoaXMuY29udGVudEZvcigpKTtcblx0cHJvdGVjdGVkIGxhYmVsSWQgPSBjb21wdXRlZCgoKSA9PiAnYnJuLXRhYnMtbGFiZWwtJyArIHRoaXMuY29udGVudEZvcigpKTtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRlZmZlY3QoKCkgPT4ge1xuXHRcdFx0dGhpcy5fcm9vdC5yZWdpc3RlckNvbnRlbnQodGhpcy5jb250ZW50Rm9yKCksIHRoaXMpO1xuXHRcdH0pO1xuXHR9XG5cblx0cHVibGljIGZvY3VzKCkge1xuXHRcdHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuXHR9XG59XG4iXX0=