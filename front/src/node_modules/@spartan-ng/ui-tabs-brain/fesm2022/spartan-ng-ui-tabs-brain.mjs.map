{"version":3,"file":"spartan-ng-ui-tabs-brain.mjs","sources":["../../../../../../libs/ui/tabs/brain/src/lib/brn-tabs.directive.ts","../../../../../../libs/ui/tabs/brain/src/lib/brn-tabs-content.directive.ts","../../../../../../libs/ui/tabs/brain/src/lib/brn-tabs-trigger.directive.ts","../../../../../../libs/ui/tabs/brain/src/lib/brn-tabs-list.directive.ts","../../../../../../libs/ui/tabs/brain/src/index.ts","../../../../../../libs/ui/tabs/brain/src/spartan-ng-ui-tabs-brain.ts"],"sourcesContent":["import { Directive, EventEmitter, Input, Output, input, signal } from '@angular/core';\nimport type { BrnTabsContentDirective } from './brn-tabs-content.directive';\nimport type { BrnTabsTriggerDirective } from './brn-tabs-trigger.directive';\n\nexport type BrnTabsOrientation = 'horizontal' | 'vertical';\nexport type BrnTabsDirection = 'ltr' | 'rtl';\nexport type BrnActivationMode = 'automatic' | 'manual';\n\n@Directive({\n\tselector: '[brnTabs]',\n\tstandalone: true,\n\thost: {\n\t\t'[attr.data-orientation]': 'orientation()',\n\t\t'[attr.dir]': 'direction()',\n\t},\n\texportAs: 'brnTabs',\n})\nexport class BrnTabsDirective {\n\tpublic readonly orientation = input<BrnTabsOrientation>('horizontal');\n\t/** internal **/\n\t$orientation = this.orientation;\n\n\tpublic readonly direction = input<BrnTabsDirection>('ltr');\n\t/** internal **/\n\t$direction = this.direction;\n\t@Output()\n\treadonly tabActivated = new EventEmitter<string>();\n\n\t// leaving this as an @input and signal to be set programmatically\n\t// current limitation by InputSignal which are readonly\n\tprotected readonly _value = signal<string | undefined>(undefined);\n\t@Input('brnTabs')\n\tset value(value: string) {\n\t\tthis._value.set(value);\n\t}\n\t/** internal **/\n\t$value = this._value.asReadonly();\n\n\tpublic readonly activationMode = input<BrnActivationMode>('automatic');\n\t/** internal **/\n\t$activationMode = this.activationMode;\n\n\tprivate _tabs: { [key: string]: { trigger: BrnTabsTriggerDirective; content: BrnTabsContentDirective } } = {};\n\tpublic readonly $tabs = this._tabs;\n\n\tpublic registerTrigger(key: string, trigger: BrnTabsTriggerDirective) {\n\t\tthis._tabs[key] = {\n\t\t\t...(this._tabs[key] ?? {}),\n\t\t\ttrigger,\n\t\t};\n\t}\n\n\tpublic registerContent(key: string, content: BrnTabsContentDirective) {\n\t\tthis._tabs[key] = {\n\t\t\t...(this._tabs[key] ?? {}),\n\t\t\tcontent,\n\t\t};\n\t}\n\temitTabActivated(key: string) {\n\t\tthis.tabActivated.emit(key);\n\t}\n\tsetValue(key: string) {\n\t\tthis._value.set(key);\n\t}\n}\n","import { Directive, ElementRef, computed, effect, inject, input } from '@angular/core';\nimport { BrnTabsDirective } from './brn-tabs.directive';\n\n@Directive({\n\tselector: '[brnTabsContent]',\n\tstandalone: true,\n\thost: {\n\t\trole: 'tabpanel',\n\t\ttabindex: '0',\n\t\t'[id]': 'contentId()',\n\t\t'[attr.aria-labelledby]': 'labelId()',\n\t\t'[hidden]': '_isSelected() === false',\n\t},\n\texportAs: 'brnTabsContent',\n})\nexport class BrnTabsContentDirective {\n\tprivate _root = inject(BrnTabsDirective);\n\tprivate _elementRef = inject(ElementRef);\n\n\tpublic readonly contentFor = input.required<string>({ alias: 'brnTabsContent' });\n\tprotected readonly _isSelected = computed(() => this._root.$value() === this.contentFor());\n\tprotected contentId = computed(() => 'brn-tabs-content-' + this.contentFor());\n\tprotected labelId = computed(() => 'brn-tabs-label-' + this.contentFor());\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tthis._root.registerContent(this.contentFor(), this);\n\t\t});\n\t}\n\n\tpublic focus() {\n\t\tthis._elementRef.nativeElement.focus();\n\t}\n}\n","import { Directive, ElementRef, Input, computed, effect, inject, input } from '@angular/core';\nimport { BrnTabsDirective } from './brn-tabs.directive';\n\n@Directive({\n\tselector: 'button[brnTabsTrigger]',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'labelId()',\n\t\ttype: 'button',\n\t\trole: 'tab',\n\t\t'[tabindex]': 'selected() ? \"0\": \"-1\"',\n\t\t'[attr.aria-selected]': 'selected()',\n\t\t'[attr.aria-controls]': 'contentId()',\n\t\t'[attr.data-state]': \"selected() ? 'active' : 'inactive'\",\n\t\t'[attr.data-orientation]': '_orientation()',\n\t\t'[attr.data-disabled]': \"disabled ? '' : undefined\",\n\t\t'(click)': 'activate()',\n\t},\n\texportAs: 'brnTabsTrigger',\n})\nexport class BrnTabsTriggerDirective {\n\tpublic readonly elementRef = inject(ElementRef);\n\n\tprivate readonly _root = inject(BrnTabsDirective);\n\n\tprotected readonly _orientation = this._root.$orientation;\n\n\tpublic readonly triggerFor = input.required<string>({ alias: 'brnTabsTrigger' });\n\tpublic readonly selected = computed(() => this._root.$value() === this.triggerFor());\n\tprotected readonly contentId = computed(() => 'brn-tabs-content-' + this.triggerFor());\n\tprotected readonly labelId = computed(() => 'brn-tabs-label-' + this.triggerFor());\n\n\t// leaving this as an @input to be compatible with the `FocusKeyManager` used in the `BrnTabsListDirective`\n\t@Input()\n\tpublic disabled = false;\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tthis._root.registerTrigger(this.triggerFor(), this);\n\t\t});\n\t}\n\n\tpublic focus() {\n\t\tthis.elementRef.nativeElement.focus();\n\t\tif (this._root.$activationMode() === 'automatic') {\n\t\t\tthis.activate();\n\t\t}\n\t}\n\n\tpublic activate() {\n\t\tif (!this.triggerFor()) return;\n\t\tthis._root.setValue(this.triggerFor());\n\t\tthis._root.emitTabActivated(this.triggerFor());\n\t}\n\n\tget key(): string | undefined {\n\t\treturn this.triggerFor();\n\t}\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { ContentChildren, Directive, inject, type AfterContentInit, type QueryList } from '@angular/core';\nimport { rxHostListener } from '@spartan-ng/ui-core';\nimport { take } from 'rxjs';\nimport { BrnTabsTriggerDirective } from './brn-tabs-trigger.directive';\nimport { BrnTabsDirective } from './brn-tabs.directive';\n\n@Directive({\n\tselector: '[brnTabsList]',\n\tstandalone: true,\n\thost: {\n\t\trole: 'tablist',\n\t\t'[attr.aria-orientation]': '_orientation()',\n\t\t'[attr.data-orientation]': '_orientation()',\n\t},\n\texportAs: 'brnTabsList',\n})\nexport class BrnTabsListDirective implements AfterContentInit {\n\tprivate _root = inject(BrnTabsDirective);\n\n\tprotected readonly _orientation = this._root.$orientation;\n\tprivate readonly _direction = this._root.$direction;\n\tprivate readonly _value = this._root.$value;\n\tprivate readonly _tabs = this._root.$tabs;\n\tprivate readonly _keyDownListener = rxHostListener('keydown');\n\n\tprivate _keyManager?: FocusKeyManager<BrnTabsTriggerDirective>;\n\n\t@ContentChildren(BrnTabsTriggerDirective, { descendants: true })\n\tpublic triggers?: QueryList<BrnTabsTriggerDirective>;\n\n\tpublic ngAfterContentInit() {\n\t\tif (!this.triggers) {\n\t\t\treturn;\n\t\t}\n\t\tthis._keyManager = new FocusKeyManager<BrnTabsTriggerDirective>(this.triggers)\n\t\t\t.withHorizontalOrientation(this._direction())\n\t\t\t.withHomeAndEnd()\n\t\t\t.withPageUpDown()\n\t\t\t.withWrap();\n\n\t\t// needed because by default the index is set to -1, which means first interaction is skipped\n\t\tthis._keyDownListener.pipe(take(1)).subscribe(() => {\n\t\t\tconst currentKey = this._value();\n\t\t\tlet activeIndex = 0;\n\t\t\tif (currentKey && this.triggers) {\n\t\t\t\tconst currentTab = this._tabs[currentKey];\n\t\t\t\tif (currentTab) {\n\t\t\t\t\tactiveIndex = this.triggers.toArray().indexOf(currentTab.trigger);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._keyManager?.setActiveItem(activeIndex);\n\t\t});\n\n\t\tthis._keyDownListener.subscribe((event) => {\n\t\t\tif ('key' in event) {\n\t\t\t\tif (this._orientation() === 'horizontal') {\n\t\t\t\t\tif (event.key === 'ArrowUp' || event.key === 'ArrowDown') return;\n\t\t\t\t}\n\t\t\t\tif (this._orientation() === 'vertical') {\n\t\t\t\t\tif (event.key === 'ArrowLeft' || event.key === 'ArrowRight') return;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._keyManager?.onKeydown(event as KeyboardEvent);\n\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { BrnTabsContentDirective } from './lib/brn-tabs-content.directive';\nimport { BrnTabsListDirective } from './lib/brn-tabs-list.directive';\nimport { BrnTabsTriggerDirective } from './lib/brn-tabs-trigger.directive';\nimport { BrnTabsDirective } from './lib/brn-tabs.directive';\n\nexport * from './lib/brn-tabs-content.directive';\nexport * from './lib/brn-tabs-list.directive';\nexport * from './lib/brn-tabs-trigger.directive';\nexport * from './lib/brn-tabs.directive';\n\nexport const BrnTabsImports = [\n\tBrnTabsDirective,\n\tBrnTabsListDirective,\n\tBrnTabsTriggerDirective,\n\tBrnTabsContentDirective,\n] as const;\n\n@NgModule({\n\timports: [...BrnTabsImports],\n\texports: [...BrnTabsImports],\n})\nexport class BrnTabsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;MAiBa,gBAAgB,CAAA;AAT7B,IAAA,WAAA,GAAA;AAUiB,QAAA,IAAA,CAAA,WAAW,GAAG,KAAK,CAAqB,YAAY,CAAC,CAAC;;AAEtE,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;AAEhB,QAAA,IAAA,CAAA,SAAS,GAAG,KAAK,CAAmB,KAAK,CAAC,CAAC;;AAE3D,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AAEnB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAU,CAAC;;;AAIhC,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAqB,SAAS,CAAC,CAAC;;AAMlE,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;AAElB,QAAA,IAAA,CAAA,cAAc,GAAG,KAAK,CAAoB,WAAW,CAAC,CAAC;;AAEvE,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAE9B,IAAK,CAAA,KAAA,GAA8F,EAAE,CAAC;AAC9F,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAqBnC,KAAA;IAjCA,IACI,KAAK,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACvB;IAWM,eAAe,CAAC,GAAW,EAAE,OAAgC,EAAA;AACnE,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;YACjB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;YACzB,OAAO;SACP,CAAC;KACF;IAEM,eAAe,CAAC,GAAW,EAAE,OAAgC,EAAA;AACnE,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;YACjB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;YACzB,OAAO;SACP,CAAC;KACF;AACD,IAAA,gBAAgB,CAAC,GAAW,EAAA;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;AACD,IAAA,QAAQ,CAAC,GAAW,EAAA;AACnB,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACrB;8GA9CW,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAhB,gBAAgB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,KAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,cAAA,EAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,uBAAA,EAAA,eAAA,EAAA,UAAA,EAAA,aAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAT5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,yBAAyB,EAAE,eAAe;AAC1C,wBAAA,YAAY,EAAE,aAAa;AAC3B,qBAAA;AACD,oBAAA,QAAQ,EAAE,SAAS;AACnB,iBAAA,CAAA;8BAUS,YAAY,EAAA,CAAA;sBADpB,MAAM;gBAOH,KAAK,EAAA,CAAA;sBADR,KAAK;uBAAC,SAAS,CAAA;;;MChBJ,uBAAuB,CAAA;AASnC,IAAA,WAAA,GAAA;AARQ,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACjC,QAAA,IAAA,CAAA,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QAEzB,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC,QAAQ,CAAS,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;AAC9D,QAAA,IAAA,CAAA,WAAW,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AACjF,QAAA,IAAA,CAAA,SAAS,GAAG,QAAQ,CAAC,MAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,OAAO,GAAG,QAAQ,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAGzE,MAAM,CAAC,MAAK;AACX,YAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;KACH;IAEM,KAAK,GAAA;AACX,QAAA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACvC;8GAjBW,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAvB,uBAAuB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,WAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAvB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAZnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,IAAI,EAAE,UAAU;AAChB,wBAAA,QAAQ,EAAE,GAAG;AACb,wBAAA,MAAM,EAAE,aAAa;AACrB,wBAAA,wBAAwB,EAAE,WAAW;AACrC,wBAAA,UAAU,EAAE,yBAAyB;AACrC,qBAAA;AACD,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,iBAAA,CAAA;;;MCMY,uBAAuB,CAAA;AAgBnC,IAAA,WAAA,GAAA;AAfgB,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAE/B,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAE/B,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAE1C,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC,QAAQ,CAAS,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;AACjE,QAAA,IAAA,CAAA,QAAQ,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AAClE,QAAA,IAAA,CAAA,SAAS,GAAG,QAAQ,CAAC,MAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,OAAO,GAAG,QAAQ,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;;QAI5E,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QAGvB,MAAM,CAAC,MAAK;AACX,YAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;KACH;IAEM,KAAK,GAAA;AACX,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACtC,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,WAAW,EAAE;YACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChB;KACD;IAEM,QAAQ,GAAA;AACd,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;QAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC/C;AAED,IAAA,IAAI,GAAG,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KACzB;8GArCW,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAvB,uBAAuB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,KAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,UAAA,EAAA,4BAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,oCAAA,EAAA,uBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,2BAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAvB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAjBnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,wBAAwB;AAClC,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,MAAM,EAAE,WAAW;AACnB,wBAAA,IAAI,EAAE,QAAQ;AACd,wBAAA,IAAI,EAAE,KAAK;AACX,wBAAA,YAAY,EAAE,wBAAwB;AACtC,wBAAA,sBAAsB,EAAE,YAAY;AACpC,wBAAA,sBAAsB,EAAE,aAAa;AACrC,wBAAA,mBAAmB,EAAE,oCAAoC;AACzD,wBAAA,yBAAyB,EAAE,gBAAgB;AAC3C,wBAAA,sBAAsB,EAAE,2BAA2B;AACnD,wBAAA,SAAS,EAAE,YAAY;AACvB,qBAAA;AACD,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,iBAAA,CAAA;wDAeO,QAAQ,EAAA,CAAA;sBADd,KAAK;;;MChBM,oBAAoB,CAAA;AAVjC,IAAA,WAAA,GAAA;AAWS,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAEtB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;AACzC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;AACnC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC3B,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AACzB,QAAA,IAAA,CAAA,gBAAgB,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;AA0C9D,KAAA;IAnCO,kBAAkB,GAAA;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,OAAO;SACP;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAA0B,IAAI,CAAC,QAAQ,CAAC;AAC5E,aAAA,yBAAyB,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;AAC5C,aAAA,cAAc,EAAE;AAChB,aAAA,cAAc,EAAE;AAChB,aAAA,QAAQ,EAAE,CAAC;;AAGb,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;AAClD,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YACjC,IAAI,WAAW,GAAG,CAAC,CAAC;AACpB,YAAA,IAAI,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAChC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC1C,IAAI,UAAU,EAAE;AACf,oBAAA,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBAClE;aACD;AACD,YAAA,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;AAC9C,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AACzC,YAAA,IAAI,KAAK,IAAI,KAAK,EAAE;AACnB,gBAAA,IAAI,IAAI,CAAC,YAAY,EAAE,KAAK,YAAY,EAAE;oBACzC,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW;wBAAE,OAAO;iBACjE;AACD,gBAAA,IAAI,IAAI,CAAC,YAAY,EAAE,KAAK,UAAU,EAAE;oBACvC,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,IAAI,KAAK,CAAC,GAAG,KAAK,YAAY;wBAAE,OAAO;iBACpE;aACD;AACD,YAAA,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,KAAsB,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;KACH;8GAhDW,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,qPAWf,uBAAuB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAX5B,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAVhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE;AACL,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,yBAAyB,EAAE,gBAAgB;AAC3C,wBAAA,yBAAyB,EAAE,gBAAgB;AAC3C,qBAAA;AACD,oBAAA,QAAQ,EAAE,aAAa;AACvB,iBAAA,CAAA;8BAaO,QAAQ,EAAA,CAAA;sBADd,eAAe;AAAC,gBAAA,IAAA,EAAA,CAAA,uBAAuB,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAA;;;AChBnD,MAAA,cAAc,GAAG;IAC7B,gBAAgB;IAChB,oBAAoB;IACpB,uBAAuB;IACvB,uBAAuB;EACb;MAME,aAAa,CAAA;8GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAb,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAVzB,gBAAgB;YAChB,oBAAoB;YACpB,uBAAuB;AACvB,YAAA,uBAAuB,aAHvB,gBAAgB;YAChB,oBAAoB;YACpB,uBAAuB;YACvB,uBAAuB,CAAA,EAAA,CAAA,CAAA,EAAA;+GAOX,aAAa,EAAA,CAAA,CAAA,EAAA;;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE,CAAC,GAAG,cAAc,CAAC;AAC5B,oBAAA,OAAO,EAAE,CAAC,GAAG,cAAc,CAAC;AAC5B,iBAAA,CAAA;;;ACtBD;;AAEG;;;;"}