import { EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export declare class BrnToggleDirective {
    private readonly _cdr;
    private readonly _tgCanBeNullableProvider;
    private readonly _disabled;
    private readonly _state;
    readonly state: import("@angular/core").Signal<"on" | "off">;
    readonly toggleDisabled: import("@angular/core").Signal<true | undefined>;
    readonly isOn: import("@angular/core").Signal<boolean>;
    id: string;
    value: any;
    set disabled(value: boolean);
    set setState(value: 'on' | 'off');
    private _disableToggleClick;
    set disableToggleClick(value: boolean);
    readonly toggled: EventEmitter<"on" | "off">;
    toggle(): void;
    toggleOff(): void;
    toggleOn(): void;
    _markForCheck(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnToggleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnToggleDirective, "button[hlmToggle], button[brnToggle]", never, { "id": { "alias": "id"; "required": false; }; "value": { "alias": "value"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "setState": { "alias": "state"; "required": false; }; "disableToggleClick": { "alias": "disableToggleClick"; "required": false; }; }, { "toggled": "toggled"; }, never, never, true, never>;
    static ngAcceptInputType_disabled: unknown;
    static ngAcceptInputType_disableToggleClick: unknown;
}
